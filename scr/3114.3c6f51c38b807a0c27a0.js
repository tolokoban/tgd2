"use strict";(self.webpackChunk_tolokoban_tgd=self.webpackChunk_tolokoban_tgd||[]).push([[3114],{3114:(n,t,e)=>{e.r(t),e.d(t,{default:()=>h});var o=e(4848),r=e(8453),i=e(6540),a=e(5968),s=e(2212),l=e(6745),u=e(6989),c=e(7276);function d(n){const t=new l.HTX(n).loadBitmap((0,l.V_9)(c)),e=new l.Eim({uniforms:{uniTime:"float",uniAspectRatio:"float",uniAspectRatioInverse:"float"},setUniforms({program:t,time:e}){t.uniform1f("uniTime",e),t.uniform1f("uniAspectRatio",n.aspectRatio),t.uniform1f("uniAspectRatioInverse",n.aspectRatioInverse)},extraFunctions:Object.assign(Object.assign({},(0,l.bKO)()),(0,l.PS_)()),fragmentShaderCode:["vec2 polar = uv2polar(varUV);","float strength = sin(uniTime);","polar.y += strength * polar.x;","vec2 uv = polar2uv(polar);","FragColor = texture(uniTexture, uv);"]});n.add(new l.D$w(n,{texture:t,filters:[e]})),n.play()}function p(){return(0,o.jsx)(u.A,{onReady:d,width:"512px",height:"512px"})}const f={"Detail #1":'    const texture = new TgdTexture2D(context).loadBitmap(\n        tgdLoadImage(BackgroundURL)\n    )\n    const filter = new TgdFilter({\n        uniforms: {\n            uniTime: "float",\n            uniAspectRatio: "float",\n            uniAspectRatioInverse: "float",\n        },\n        setUniforms({ program, time }) {\n            program.uniform1f("uniTime", time)\n            program.uniform1f("uniAspectRatio", context.aspectRatio)\n            program.uniform1f(\n                "uniAspectRatioInverse",\n                context.aspectRatioInverse\n            )\n        },\n        extraFunctions: {\n            ...tgdCodeFunction_uv2polar(),\n            ...tgdCodeFunction_polar2uv(),\n        },\n        fragmentShaderCode: [\n            "vec2 polar = uv2polar(varUV);",\n            "float strength = sin(uniTime);",\n            "polar.y += strength * polar.x;",\n            "vec2 uv = polar2uv(polar);",\n            "FragColor = texture(uniTexture, uv);",\n        ],\n    })\n    context.add(\n        new TgdPainterFilter(context, {\n            texture,\n            filters: [filter],\n        })\n    )\n    context.play()'},m='import {\n    tgdCodeFunction_polar2uv,\n    tgdCodeFunction_uv2polar,\n    TgdContext,\n    TgdFilter,\n    tgdLoadImage,\n    TgdPainterFilter,\n    TgdTexture2D,\n} from "@tolokoban/tgd"\nimport View from "@/components/demo/Tgd"\n\nimport BackgroundURL from "../../../marylin.webp"\n\nfunction init(context: TgdContext) {\n    const texture = new TgdTexture2D(context).loadBitmap(\n        tgdLoadImage(BackgroundURL)\n    )\n    const filter = new TgdFilter({\n        uniforms: {\n            uniTime: "float",\n            uniAspectRatio: "float",\n            uniAspectRatioInverse: "float",\n        },\n        setUniforms({ program, time }) {\n            program.uniform1f("uniTime", time)\n            program.uniform1f("uniAspectRatio", context.aspectRatio)\n            program.uniform1f(\n                "uniAspectRatioInverse",\n                context.aspectRatioInverse\n            )\n        },\n        extraFunctions: {\n            ...tgdCodeFunction_uv2polar(),\n            ...tgdCodeFunction_polar2uv(),\n        },\n        fragmentShaderCode: [\n            "vec2 polar = uv2polar(varUV);",\n            "float strength = sin(uniTime);",\n            "polar.y += strength * polar.x;",\n            "vec2 uv = polar2uv(polar);",\n            "FragColor = texture(uniTexture, uv);",\n        ],\n    })\n    context.add(\n        new TgdPainterFilter(context, {\n            texture,\n            filters: [filter],\n        })\n    )\n    context.play()\n}\n\nexport default function Demo() {\n    return <View onReady={init} width="512px" height="512px" />\n}\n';function g(){const[n,t]=i.useState(!1);return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)("div",{className:"half-left",children:(0,o.jsx)(p,{})}),(0,o.jsxs)("div",{className:"half-right",children:[(0,o.jsx)("div",{children:(0,o.jsx)(a.yQN,{variant:"elevated",onClick:()=>t(!n),children:n?"Show code details":"Show full code"})}),(0,o.jsx)(s.A,{language:"tsx",value:n?m:f})]})]})}function x(n){const t={a:"a",h1:"h1",h2:"h2",p:"p",...(0,r.R)(),...n.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.h1,{children:(0,o.jsx)(t.a,{href:"docs/classes/TgdPainterFilter.html",children:"TgdPainterFilter"})}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.a,{href:"#..",children:"Back to the list of available filters"})}),"\n",(0,o.jsxs)(t.h2,{children:["Custom filter with ",(0,o.jsx)(t.a,{href:"docs/classes/TgdFilter.html",children:"TgdFilter"})]}),"\n",(0,o.jsx)(t.p,{children:"We want some kind of line art for Marylin. Everything dark enough will become\npart of a line, the rest will be discarded."}),"\n",(0,o.jsx)(g,{})]})}function h(n={}){const{wrapper:t}={...(0,r.R)(),...n.components};return t?(0,o.jsx)(t,{...n,children:(0,o.jsx)(x,{...n})}):x(n)}}}]);