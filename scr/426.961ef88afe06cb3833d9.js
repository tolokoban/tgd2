"use strict";(self.webpackChunk_tolokoban_tgd=self.webpackChunk_tolokoban_tgd||[]).push([[426],{2839:(e,n,t)=>{t.r(n),t.d(n,{default:()=>b});var r=t(4848),a=t(8453),o=t(6540),s=t(7781),i=t(9074),c=t(2138),l=t(7289),u=t(5345),d=t(4859);function f(e,n){const t=new c.TgdTexture2D(e);e.camera=new c.TgdCameraPerspective({transfo:{distance:6},far:100,near:.01,fovy:Math.PI/4,zoom:1});const r=new c.TgdPainterFramebuffer(e,{textureColor0:new c.TgdTexture2D(e)}),a=new c.TgdPainterFramebuffer(e,{textureColor0:new c.TgdTexture2D(e)}),o=new c.TgdPainterFilter(e,{texture:a.textureColor0??t,filters:[new c.TgdFilterZoom],flipY:!0}),s=new c.TgdPainterState(e,{depth:c.webglPresetDepth.less,cull:c.webglPresetCull.back,children:[o,new c.TgdPainterClear(e,{depth:1}),new c.TgdPainterMeshGltf(e,{asset:n.glb.mesh,material:()=>new c.TgdMaterialDiffuse({color:new c.TgdVec4(1,.666,0),specularExponent:5,specularIntensity:2.5,light:new c.TgdLight({color:new c.TgdVec4(1,1,1,1),direction:new c.TgdVec3(1,0,0)}),ambient:new c.TgdLight({color:new c.TgdVec4(.111,.333,.999,4)})})})]});r.add(s);const i=new c.TgdFilterHueRotation({hueShiftInDegrees:2}),l=new c.TgdFilterZoom({zoom:1.007}),u=new c.TgdPainterFilter(e,{texture:r.textureColor0??t,filters:[i,l],flipY:!0});a.add(u);const d=new c.TgdPainterFilter(e,{texture:r.textureColor0??t,filters:[new c.TgdFilterZoom],flipY:!0});r.onExit=()=>{u.texture=r.textureColor0??t},a.onExit=()=>{o.texture=a.textureColor0??t,d.texture=a.textureColor0??t},e.add(r,a,d,new c.TgdPainterLogic(n=>{const{camera:t}=e;t.transfo.orbitAroundX(.03*Math.sin(.005045*n)),t.transfo.orbitAroundY(.02*Math.sin(.001751*n)),l.translation.x=.005*Math.sin(.0024581*n),l.translation.y=.005*Math.sin(.0037151*n)})),e.play()}function g(){return(0,r.jsx)(l.A,{onReady:f,assets:{glb:{mesh:u},image:{background:d}}})}const m={"Detail #1":"    const defaultTexture = new TgdTexture2D(context)\n    context.camera = new TgdCameraPerspective({\n        transfo: { distance: 6 },\n        far: 100,\n        near: 0.01,\n        fovy: Math.PI / 4,\n        zoom: 1,\n    })\n    const framebuffer1 = new TgdPainterFramebuffer(context, {\n        textureColor0: new TgdTexture2D(context),\n    })\n    const framebuffer2 = new TgdPainterFramebuffer(context, {\n        textureColor0: new TgdTexture2D(context),\n    })\n    const background = new TgdPainterFilter(context, {\n        texture: framebuffer2.textureColor0 ?? defaultTexture,\n        filters: [new TgdFilterZoom()],\n        flipY: true,\n    })\n    const painter = new TgdPainterState(context, {\n        depth: webglPresetDepth.less,\n        cull: webglPresetCull.back,\n        children: [\n            background,\n            new TgdPainterClear(context, {\n                depth: 1,\n            }),\n            new TgdPainterMeshGltf(context, {\n                asset: assets.glb.mesh,\n                material: () =>\n                    new TgdMaterialDiffuse({\n                        color: new TgdVec4(1, 0.666, 0),\n                        specularExponent: 5,\n                        specularIntensity: 2.5,\n                        light: new TgdLight({\n                            color: new TgdVec4(1, 1, 1, 1),\n                            direction: new TgdVec3(1, 0, 0),\n                        }),\n                        ambient: new TgdLight({\n                            color: new TgdVec4(0.111, 0.333, 0.999, 4),\n                        }),\n                    }),\n                // new TgdMaterialNormals(),\n            }),\n        ],\n    })\n    framebuffer1.add(painter)\n    const filterHue = new TgdFilterHueRotation({ hueShiftInDegrees: 2 })\n    const filterZoom = new TgdFilterZoom({ zoom: 1.007 })\n    const filters = new TgdPainterFilter(context, {\n        texture: framebuffer1.textureColor0 ?? defaultTexture,\n        filters: [filterHue, filterZoom],\n        flipY: true,\n    })\n    framebuffer2.add(filters)\n    const screen = new TgdPainterFilter(context, {\n        texture: framebuffer1.textureColor0 ?? defaultTexture,\n        filters: [new TgdFilterZoom()],\n        flipY: true,\n    })\n    /**\n     * This is important because the texture of a framebuffer is recreated\n     * any time the screen size changes.\n     */\n    framebuffer1.onExit = () => {\n        filters.texture = framebuffer1.textureColor0 ?? defaultTexture\n    }\n    framebuffer2.onExit = () => {\n        background.texture = framebuffer2.textureColor0 ?? defaultTexture\n        screen.texture = framebuffer2.textureColor0 ?? defaultTexture\n    }\n    context.add(\n        framebuffer1,\n        framebuffer2,\n        screen,\n        new TgdPainterLogic(time => {\n            const { camera } = context\n            camera.transfo.orbitAroundX(Math.sin(time * 0.005045) * 0.03)\n            camera.transfo.orbitAroundY(Math.sin(time * 0.001751) * 0.02)\n            filterZoom.translation.x = 0.005 * Math.sin(time * 0.0024581)\n            filterZoom.translation.y = 0.005 * Math.sin(time * 0.0037151)\n        })\n    )\n    context.play()"},x='import {\n    TgdCameraPerspective,\n    TgdContext,\n    TgdFilterHueRotation,\n    TgdFilterZoom,\n    TgdLight,\n    TgdMaterialDiffuse,\n    TgdPainterClear,\n    TgdPainterFilter,\n    TgdPainterFramebuffer,\n    TgdPainterLogic,\n    TgdPainterMeshGltf,\n    TgdPainterState,\n    TgdTexture2D,\n    TgdVec3,\n    TgdVec4,\n    webglPresetCull,\n    webglPresetDepth,\n} from "@tolokoban/tgd"\nimport View, { Assets } from "@/components/demo/Tgd"\n\nimport SuzanneURL from "@/assets/mesh/logo.glb"\nimport BackgroundURL from "@/assets/image/dino.webp"\n\nfunction init(context: TgdContext, assets: Assets) {\n    const defaultTexture = new TgdTexture2D(context)\n    context.camera = new TgdCameraPerspective({\n        transfo: { distance: 6 },\n        far: 100,\n        near: 0.01,\n        fovy: Math.PI / 4,\n        zoom: 1,\n    })\n    const framebuffer1 = new TgdPainterFramebuffer(context, {\n        textureColor0: new TgdTexture2D(context),\n    })\n    const framebuffer2 = new TgdPainterFramebuffer(context, {\n        textureColor0: new TgdTexture2D(context),\n    })\n    const background = new TgdPainterFilter(context, {\n        texture: framebuffer2.textureColor0 ?? defaultTexture,\n        filters: [new TgdFilterZoom()],\n        flipY: true,\n    })\n    const painter = new TgdPainterState(context, {\n        depth: webglPresetDepth.less,\n        cull: webglPresetCull.back,\n        children: [\n            background,\n            new TgdPainterClear(context, {\n                depth: 1,\n            }),\n            new TgdPainterMeshGltf(context, {\n                asset: assets.glb.mesh,\n                material: () =>\n                    new TgdMaterialDiffuse({\n                        color: new TgdVec4(1, 0.666, 0),\n                        specularExponent: 5,\n                        specularIntensity: 2.5,\n                        light: new TgdLight({\n                            color: new TgdVec4(1, 1, 1, 1),\n                            direction: new TgdVec3(1, 0, 0),\n                        }),\n                        ambient: new TgdLight({\n                            color: new TgdVec4(0.111, 0.333, 0.999, 4),\n                        }),\n                    }),\n                // new TgdMaterialNormals(),\n            }),\n        ],\n    })\n    framebuffer1.add(painter)\n    const filterHue = new TgdFilterHueRotation({ hueShiftInDegrees: 2 })\n    const filterZoom = new TgdFilterZoom({ zoom: 1.007 })\n    const filters = new TgdPainterFilter(context, {\n        texture: framebuffer1.textureColor0 ?? defaultTexture,\n        filters: [filterHue, filterZoom],\n        flipY: true,\n    })\n    framebuffer2.add(filters)\n    const screen = new TgdPainterFilter(context, {\n        texture: framebuffer1.textureColor0 ?? defaultTexture,\n        filters: [new TgdFilterZoom()],\n        flipY: true,\n    })\n    /**\n     * This is important because the texture of a framebuffer is recreated\n     * any time the screen size changes.\n     */\n    framebuffer1.onExit = () => {\n        filters.texture = framebuffer1.textureColor0 ?? defaultTexture\n    }\n    framebuffer2.onExit = () => {\n        background.texture = framebuffer2.textureColor0 ?? defaultTexture\n        screen.texture = framebuffer2.textureColor0 ?? defaultTexture\n    }\n    context.add(\n        framebuffer1,\n        framebuffer2,\n        screen,\n        new TgdPainterLogic(time => {\n            const { camera } = context\n            camera.transfo.orbitAroundX(Math.sin(time * 0.005045) * 0.03)\n            camera.transfo.orbitAroundY(Math.sin(time * 0.001751) * 0.02)\n            filterZoom.translation.x = 0.005 * Math.sin(time * 0.0024581)\n            filterZoom.translation.y = 0.005 * Math.sin(time * 0.0037151)\n        })\n    )\n    context.play()\n}\n\nexport default function Demo() {\n    return (\n        <View\n            onReady={init}\n            assets={{\n                glb: {\n                    mesh: SuzanneURL,\n                },\n                image: {\n                    background: BackgroundURL,\n                },\n            }}\n        />\n    )\n}\n';function h(){const[e,n]=o.useState(!1);return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)("div",{className:"half-left",children:(0,r.jsx)(g,{})}),(0,r.jsxs)("div",{className:"half-right",children:[(0,r.jsx)("div",{children:(0,r.jsx)(s.yQN,{variant:"elevated",onClick:()=>n(!e),children:e?"Show code details":"Show full code"})}),(0,r.jsx)(i.A,{language:"tsx",value:e?x:m})]})]})}function T(e){const n={a:"a",h1:"h1",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.h1,{children:[(0,r.jsx)(n.a,{href:"docs/classes/TgdPainterFramebuffer.html",children:"TgdPainterFramebuffer"})," - Example 1"]}),"\n",(0,r.jsx)(h,{})]})}function b(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(T,{...e})}):T(e)}},4859:(e,n,t)=>{e.exports=t.p+"img/dino.a892a1760dcaac9618a1.webp"},5345:(e,n,t)=>{e.exports=t.p+"bin/logo.f63fd222e8eb89f79227.glb"},7289:(e,n,t)=>{t.d(n,{A:()=>l});var r=t(4848),a=t(6540),o=t(2138),s=t(7781),i=t(3686);const c={Tgd:"hgIjhDQIuBCJEQ4ZgLXp",relative:"efOyHCihw9wfMB6AaAqw",overlay:"ywC8N0Uxbvm2Ug2DwPkE",loading:"PBWSRsbiwEqGpeL0hEfm",screen:"BErChOLWGtciKhh3IFud",canvas:"fT7FcYouYlPbElIAEXRP",gizmo:"uAPfWt_Dhe7RaRrnmIu0",actions:"Ia9jfUO3OevcIh2fV6R6",enabled:"dZYZScZBbWV2Pm3ftXcG",error:"J6dIEMXVMCzdFWF9UHio"};function l({className:e,options:n,onReady:t,gizmo:l=!1,width:u="640px",height:d="480px",noBorder:f=!1,assets:g,children:m}){const[x,h]=a.useState(null),[T,b]=a.useState(!0),[w,p]=a.useState(!1),C=a.useRef(null),P=a.useRef(null),v=a.useRef(null),F=a.useRef(null),[j,y]=a.useState(!0);let k="auto";u.endsWith("px")&&d.endsWith("px")&&(u.substring(u.length-2),d.substring(d.length-2));const M=e=>{if(!e)return;if(P.current)return;P.current=e;const r=new o.TgdContext(e,n),a=r.gl.getParameter(r.gl.DEPTH_BITS);console.log("Depht buffer bits:",a),C.current=r,y(!0),async function({glb:e,data:n,text:t,image:r}={}){console.log("🚀 [Tgd] glb, data, text, image = ",e,n,t,r);const a={glb:{},data:{},text:{},image:{}},s=[];return r&&Object.keys(r).forEach(e=>{s.push(async()=>{const n=r[e];console.log("Loading image:",n);const t=await(0,o.tgdLoadImage)(n);t&&(a.image[e]=t)})}),e&&Object.keys(e).forEach(n=>{s.push(async()=>{const t=e[n];console.log("Loading GLB:",t);const r=await(0,o.tgdLoadGlb)(t);r&&(a.glb[n]=r)})}),n&&Object.keys(n).forEach(e=>{s.push(async()=>{const t=n[e],r=await(0,o.tgdLoadArrayBuffer)(t);r&&(a.data[e]=r)})}),t&&Object.keys(t).forEach(e=>{s.push(async()=>{const n=t[e],r=await(0,o.tgdLoadText)(n);r&&(a.text[e]=r)})}),await Promise.all(s.map(e=>e())),a}(g).then(e=>{try{t(r,e),r.paint()}catch(e){h(e instanceof Error?e.message:JSON.stringify(e))}y(!1)}).catch(e=>{console.error("Unable to initialize the scene!",e),y(!1)});const s=v.current;s&&s.attachContext(r)},D=e=>{const n=new o.TgdCanvasGizmo({canvas:e});v.current=n,n.eventTipClick.addListener(({to:e})=>{const n=C.current;n&&n.animSchedule({duration:.2,easingFunction:o.tgdEasingFunctionInOutCubic,action:(0,o.tgdActionCreateCameraInterpolation)(n.camera,{orientation:e})})});const t=C.current;t&&n.attachContext(t)};return a.useEffect(()=>{const e=P.current,n=C.current;if(!e||!n)return;const t=new ResizeObserver(()=>n.paint());return t.observe(e),e.requestFullscreen||(e.requestFullscreen=e.webkitRequestFullscreen),p(Boolean(e.requestFullscreen)),()=>t.unobserve(e)},[C.current,P.current]),f?(0,r.jsxs)("div",{ref:F,className:c.screen,style:{width:T?u:d,height:T?d:u},children:[(0,r.jsx)("canvas",{className:c.canvas,ref:M}),l&&(0,r.jsx)("canvas",{className:c.gizmo,ref:D}),x&&(0,r.jsx)("div",{className:c.error,children:x})]}):(0,r.jsxs)("div",{className:s.Sxu.classNames.join(e,c.Tgd),children:[(0,r.jsxs)("div",{className:s.Sxu.classNames.join(c.actions,!j&&c.enabled),children:[(0,r.jsx)("div",{children:(0,r.jsx)(s.I64,{onClick:()=>b(!T)})}),(0,r.jsx)("div",{children:(0,r.jsx)(s.kRc,{onClick:()=>{const e=C.current;e&&e.takeSnapshot().then(e=>{const n=document.createElement("a");document.body.appendChild(n),n.style.display="none",n.href=e.src,n.download="snapshot.png",n.click(),window.setTimeout(()=>document.body.removeChild(n),3e4)})}})}),w&&(0,r.jsx)("div",{children:(0,r.jsx)(s.L9n,{onClick:()=>{const e=F.current;e&&e.requestFullscreen()}})})]}),(0,r.jsxs)("div",{className:c.relative,children:[(0,r.jsxs)("div",{ref:F,className:c.screen,style:{width:T?u:d,height:T?d:u},children:[(0,r.jsx)("canvas",{className:c.canvas,ref:M}),l&&(0,r.jsx)("canvas",{className:c.gizmo,ref:D}),x&&(0,r.jsx)("div",{className:c.error,children:x})]}),(0,r.jsx)("div",{className:s.Sxu.classNames.join(c.overlay,j&&c.loading),children:(0,r.jsx)(i.A,{})}),m]})]})}},8453:(e,n,t)=>{t.d(n,{R:()=>o});var r=t(6540);const a=r.createContext({});function o(e){const n=r.useContext(a);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}}}]);