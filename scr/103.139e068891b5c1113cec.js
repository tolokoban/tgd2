"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[103],{103:(e,n,s)=>{s.r(n),s.d(n,{default:()=>l});var t=s(893),r=s(87);function i(e){if(e){var n=new r.fn(e);n.addPainter(new r.Op(n,{color:[1,.7,0,1]})),e.addEventListener("dblclick",(function(){return n.toggleFullscreen()}))}}function c(){return(0,t.jsx)("canvas",{ref:i,style:{width:"100%",height:"50vh"},title:"Double-clic pour plein écran"})}function o(e){const n=Object.assign({h1:"h1",p:"p",strong:"strong",code:"code"},e.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{children:"TgdAttributes"}),"\n",(0,t.jsxs)(n.p,{children:["WebGL2 peut dessiner des points, des lignes et des triangles à partir d'une\nliste de ",(0,t.jsx)(n.strong,{children:"vertex"}),". Pour un triangle, par exemple, il faudra utiliser trois\nvertex."]}),"\n",(0,t.jsxs)(n.p,{children:["Les coordonnées de ces vertex ",(0,t.jsx)(n.code,{children:"(x, y, z, w)"})," ne sont pas définies directement.\nElles sont calculées par une fonction qui prend, en entrée, une liste de données\nque l'on appelle les ",(0,t.jsx)(n.strong,{children:"attributs"})," du vertex. Et toutes ce données sont\nenchaînées bout à bout dans un tableau linéaire."]}),"\n",(0,t.jsx)(c,{})]})}const l=function(e={}){const{wrapper:n}=e.components||{};return n?(0,t.jsx)(n,Object.assign({},e,{children:(0,t.jsx)(o,e)})):o(e)}}}]);