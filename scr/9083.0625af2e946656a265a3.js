"use strict";(self.webpackChunk_tolokoban_tgd=self.webpackChunk_tolokoban_tgd||[]).push([[9083],{6633:(e,n,t)=>{t.r(n),t.d(n,{default:()=>P});var a=t(4848),s=t(8453),o=t(6540),r=t(7781),c=t(9074),i=t(6391),m=t(7289);const l=t.p+"img/posX.477821fd8ce0371465cf.webp",g=t.p+"img/posY.be8f41edae8403012724.webp",d=t.p+"img/posZ.42b2b232839f49074279.webp",u=t.p+"img/negX.a12236ce5d065e14c8b8.webp",h=t.p+"img/negY.d6cc68c5b1907e80b22e.webp",p=t.p+"img/negZ.e44ef1ce873f6aa34ddc.webp",x={skybox:"JaFQCm00ywbzHqhPiROf",footer:"lN_73TsBtPzrXOpBA3BL"};function b(){const[e,n]=o.useState(null),t=o.useRef(null),s=n=>{const a=t.current;if(!e||!a)return;const s=i.TgdQuat.fromFace(n);a.animSchedule({action:(0,i.tgdActionCreateTransfoInterpolation)(e.transfo,{},{orientation:s}),duration:.3,easingFunction:i.tgdEasingFunctionInOutCubic})};return(0,a.jsx)(m.A,{className:x.skybox,gizmo:!0,onReady:(e,a)=>{const s=function(e,n){const t=new i.TgdCameraPerspective({transfo:{distance:6}});e.camera=t,new i.TgdControllerCameraOrbit(e,{inertiaOrbit:1e3}),e.camera.debug();const a=new i.TgdPainterSkybox(e,{camera:e.camera,imagePosX:n.image.imagePosX,imagePosY:n.image.imagePosY,imagePosZ:n.image.imagePosZ,imageNegX:n.image.imageNegX,imageNegY:n.image.imageNegY,imageNegZ:n.image.imageNegZ}),s=new i.TgdPainterClear(e,{depth:1}),o=new i.TgdPainterMesh(e),r=new i.TgdPainterAxes(e,{scale:3}),c=new i.TgdPainterState(e,{depth:i.webglPresetDepth.lessOrEqual,children:[r,o,a]});return e.add(s,c),e.paint(),{camera:t}}(e,a);n(s.camera),t.current=e},assets:{image:{imagePosX:l,imagePosY:g,imagePosZ:d,imageNegX:u,imageNegY:h,imageNegZ:p}},children:(0,a.jsxs)("footer",{className:x.footer,children:[(0,a.jsx)(r.yQN,{onClick:()=>s("+X+Y+Z"),children:"Reset"}),(0,a.jsx)(r.yQN,{onClick:()=>s("-Z-Y-X"),children:"+X"}),(0,a.jsx)(r.yQN,{onClick:()=>s("+X+Z-Y"),children:"+Y"}),(0,a.jsx)(r.yQN,{onClick:()=>s("+X-Y-Z"),children:"+Z"}),(0,a.jsx)(r.yQN,{onClick:()=>s("+Z-Y+X"),children:"-X"}),(0,a.jsx)(r.yQN,{onClick:()=>s("+X-Z+Y"),children:"-Y"}),(0,a.jsx)(r.yQN,{onClick:()=>s("-X-Y+Z"),children:"-Z"})]})})}const f={"Detail #1":"    const camera = new TgdCameraPerspective({\n        transfo: {\n            distance: 6,\n        },\n    })\n    context.camera = camera\n    new TgdControllerCameraOrbit(context, {\n        inertiaOrbit: 1000,\n    })\n    context.camera.debug()\n    const skybox = new TgdPainterSkybox(context, {\n        camera: context.camera,\n        imagePosX: assets.image.imagePosX,\n        imagePosY: assets.image.imagePosY,\n        imagePosZ: assets.image.imagePosZ,\n        imageNegX: assets.image.imageNegX,\n        imageNegY: assets.image.imageNegY,\n        imageNegZ: assets.image.imageNegZ,\n    })\n    const clear = new TgdPainterClear(context, {\n        depth: 1,\n    })\n    const cube = new TgdPainterMesh(context)\n    const axes = new TgdPainterAxes(context, { scale: 3 })\n    const state = new TgdPainterState(context, {\n        depth: webglPresetDepth.lessOrEqual,\n        children: [axes, cube, skybox],\n    })\n    context.add(clear, state)\n    context.paint()\n    return { camera }"},w='import React from "react"\nimport {\n    tgdActionCreateTransfoInterpolation,\n    TgdCamera,\n    TgdCameraPerspective,\n    TgdContext,\n    TgdControllerCameraOrbit,\n    tgdEasingFunctionInOutBounce,\n    tgdEasingFunctionInOutCubic,\n    TgdGeometryBox,\n    TgdMat3,\n    TgdPainterAxes,\n    TgdPainterClear,\n    TgdPainterLogic,\n    TgdPainterMesh,\n    TgdPainterSkybox,\n    TgdPainterState,\n    TgdQuat,\n    TgdQuatFace,\n    TgdTransfo,\n    TgdVec3,\n    webglPresetDepth,\n} from "@tolokoban/tgd"\n\nimport View, { Assets } from "@/components/demo/Tgd"\nimport { ViewButton } from "@tolokoban/ui"\n\nimport imagePosX from "./posX.webp" // +X\nimport imagePosY from "./posY.webp" // +Y\nimport imagePosZ from "./posZ.webp" // +Z\nimport imageNegX from "./negX.webp" // -X\nimport imageNegY from "./negY.webp" // -Y\nimport imageNegZ from "./negZ.webp" // -Z\n\nimport styles from "./skybox.demo.module.css"\n\nfunction init(\n    context: TgdContext,\n    assets: Assets\n): {\n    camera: TgdCamera\n} {\n    const camera = new TgdCameraPerspective({\n        transfo: {\n            distance: 6,\n        },\n    })\n    context.camera = camera\n    new TgdControllerCameraOrbit(context, {\n        inertiaOrbit: 1000,\n    })\n    context.camera.debug()\n    const skybox = new TgdPainterSkybox(context, {\n        camera: context.camera,\n        imagePosX: assets.image.imagePosX,\n        imagePosY: assets.image.imagePosY,\n        imagePosZ: assets.image.imagePosZ,\n        imageNegX: assets.image.imageNegX,\n        imageNegY: assets.image.imageNegY,\n        imageNegZ: assets.image.imageNegZ,\n    })\n    const clear = new TgdPainterClear(context, {\n        depth: 1,\n    })\n    const cube = new TgdPainterMesh(context)\n    const axes = new TgdPainterAxes(context, { scale: 3 })\n    const state = new TgdPainterState(context, {\n        depth: webglPresetDepth.lessOrEqual,\n        children: [axes, cube, skybox],\n    })\n    context.add(clear, state)\n    context.paint()\n    return { camera }\n}\n\nexport default function Demo() {\n    const [camera, setCamera] = React.useState<TgdCamera | null>(null)\n    const refContext = React.useRef<TgdContext | null>(null)\n    const handleReady = (context: TgdContext, assets: Assets) => {\n        const resources = init(context, assets)\n        setCamera(resources.camera)\n        refContext.current = context\n    }\n    const face = (value: TgdQuatFace) => {\n        const context = refContext.current\n        if (!camera || !context) return\n\n        const orientation = TgdQuat.fromFace(value)\n        context.animSchedule({\n            action: tgdActionCreateTransfoInterpolation(\n                camera.transfo,\n                {},\n                {\n                    orientation,\n                }\n            ),\n            duration: 0.3,\n            easingFunction: tgdEasingFunctionInOutCubic,\n        })\n    }\n    return (\n        <View\n            className={styles.skybox}\n            gizmo\n            onReady={handleReady}\n            assets={{\n                image: {\n                    imagePosX,\n                    imagePosY,\n                    imagePosZ,\n                    imageNegX,\n                    imageNegY,\n                    imageNegZ,\n                },\n            }}\n        >\n            <footer className={styles.footer}>\n                <ViewButton onClick={() => face("+X+Y+Z")}>Reset</ViewButton>\n                <ViewButton onClick={() => face("-Z-Y-X")}>+X</ViewButton>\n                <ViewButton onClick={() => face("+X+Z-Y")}>+Y</ViewButton>\n                <ViewButton onClick={() => face("+X-Y-Z")}>+Z</ViewButton>\n                <ViewButton onClick={() => face("+Z-Y+X")}>-X</ViewButton>\n                <ViewButton onClick={() => face("+X-Z+Y")}>-Y</ViewButton>\n                <ViewButton onClick={() => face("-X-Y+Z")}>-Z</ViewButton>\n            </footer>\n        </View>\n    )\n}\n';function y(){const[e,n]=o.useState(!1);return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)("div",{className:"half-left",children:(0,a.jsx)(b,{})}),(0,a.jsxs)("div",{className:"half-right",children:[(0,a.jsx)("div",{children:(0,a.jsx)(r.yQN,{variant:"elevated",onClick:()=>n(!e),children:e?"Show code details":"Show full code"})}),(0,a.jsx)(c.A,{language:"tsx",value:e?w:f})]})]})}const C=t.p+"img/textures.870cc511ead6a1154c14.jpg";function j(e){const n={a:"a",code:"code",h1:"h1",p:"p",pre:"pre",strong:"strong",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h1,{children:"Texture Cube"}),"\n",(0,a.jsx)(y,{}),"\n",(0,a.jsx)(n.p,{children:"To create a TextureCube, you need six square images of the same size."}),"\n",(0,a.jsxs)(n.p,{children:["One easy way to get such images is to get an HDRI environment from\n",(0,a.jsx)(n.a,{href:"https://polyhaven.com/hdris",children:"Polyhaven"})," (or any other free website) and to use\nit in a Blender scene."]}),"\n",(0,a.jsx)(n.p,{children:"Once you are happy with the result, set a square rendering viewport (ex.: 1024x1024)\nand execute this script:"}),"\n",(0,a.jsxs)("details",{children:[(0,a.jsx)("summary",{children:"Blender's Python Script"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"hljs language-python",children:'import bpy\nimport math\nimport mathutils\n\n# Save the current active camera\noriginal_camera = bpy.context.scene.camera\nprint("Quat =", original_camera.rotation_quaternion)\n\n# Check if the collection "SkyboxCameras" exists, if not, create it\ncollection_name = "SkyboxCameras"\nif collection_name not in bpy.data.collections:\n    skybox_collection = bpy.data.collections.new(collection_name)\n    bpy.context.scene.collection.children.link(skybox_collection)\nelse:\n    skybox_collection = bpy.data.collections[collection_name]\n    \nA = 0.7071067811865476\nH = 0.5\nfaces = [\n  [(-H, H, H, -H), "posX"],\n  [(0, -1, 0, 0), "posY"],\n  [(-A, A, 0, 0), "posZ"],\n  [(-H, H, -H, H), "negX"],\n  [(-1, 0, 0, 0), "negY"],\n  [(0, 0, -A, A), "negZ"]\n]\nbpy.context.window_manager.progress_begin(0, len(faces))\nstep = 0\nfor (face, name) in faces:\n    step = step + 1\n    camera_name = f"Camera.{name}"\n    print("Camera name:", camera_name)\n    # Create a new camera for this face\n    if camera_name in bpy.data.objects:\n        camera_object = bpy.data.objects[camera_name]\n    else:\n        # Create a new camera object\n        camera_data = bpy.data.cameras.new(name=camera_name)\n        camera_object = bpy.data.objects.new(camera_name, camera_data)\n        skybox_collection.objects.link(camera_object)\n    # Update the progress bar\n    bpy.context.window_manager.progress_update(step)\n    sensor_width = camera_object.data.sensor_width\n    focal_length = (0.5 * sensor_width) / math.tan(0.25 * math.pi)    \n    camera_object.data.lens = focal_length\n    camera_object.location = (0, 0, 0)\n    camera_object.rotation_mode = \'QUATERNION\'\n    quaternion = mathutils.Quaternion(face)\n    camera_object.rotation_quaternion = quaternion\n    bpy.data.cameras[camera_name].angle = math.pi / 2\n    # Set the camera as the active camera\n    bpy.context.scene.camera = camera_object\n    # Render the scene\n    bpy.context.scene.render.image_settings.file_format = \'WEBP\'\n    bpy.context.scene.render.filepath = f\'//{name}.webp\'\n    bpy.ops.render.render(write_still=True)\n    \nprint("End.")\nbpy.context.window_manager.progress_end()\n\n# Restore the original active camera\nbpy.context.scene.camera = original_camera\n'})})]}),"\n",(0,a.jsx)(n.p,{children:"It will ceate the six needed images in the same folder as your Blender file."}),"\n",(0,a.jsx)("img",{src:C}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Warning!"})," by default, TGD uses the convention where +Y is pointing up, +X pointing right and +Z toward the camera,\nbut for Blender we have +Z pointing up, +X pointing right and -Y toward the camera."]})]})}function P(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(j,{...e})}):j(e)}},7289:(e,n,t)=>{t.d(n,{A:()=>m});var a=t(4848),s=t(6540),o=t(6391),r=t(7781),c=t(3686);const i={Tgd:"hgIjhDQIuBCJEQ4ZgLXp",relative:"efOyHCihw9wfMB6AaAqw",overlay:"ywC8N0Uxbvm2Ug2DwPkE",loading:"PBWSRsbiwEqGpeL0hEfm",screen:"BErChOLWGtciKhh3IFud",canvas:"fT7FcYouYlPbElIAEXRP",gizmo:"uAPfWt_Dhe7RaRrnmIu0",actions:"Ia9jfUO3OevcIh2fV6R6",enabled:"dZYZScZBbWV2Pm3ftXcG",error:"J6dIEMXVMCzdFWF9UHio"};function m({className:e,options:n,onReady:t,gizmo:m=!1,width:l="640px",height:g="480px",noBorder:d=!1,assets:u,children:h}){const[p,x]=s.useState(null),[b,f]=s.useState(!0),[w,y]=s.useState(!1),C=s.useRef(null),j=s.useRef(null),P=s.useRef(null),T=s.useRef(null),[N,k]=s.useState(!0);let v="auto";l.endsWith("px")&&g.endsWith("px")&&(l.substring(l.length-2),g.substring(g.length-2));const _=e=>{if(!e)return;if(j.current)return;j.current=e;const a=new o.TgdContext(e,n),s=a.gl.getParameter(a.gl.DEPTH_BITS);console.log("Depht buffer bits:",s),C.current=a,k(!0),async function({glb:e,data:n,text:t,image:a}={}){console.log("🚀 [Tgd] glb, data, text, image = ",e,n,t,a);const s={glb:{},data:{},text:{},image:{}},r=[];return a&&Object.keys(a).forEach(e=>{r.push(async()=>{const n=a[e];console.log("Loading image:",n);const t=await(0,o.tgdLoadImage)(n);t&&(s.image[e]=t)})}),e&&Object.keys(e).forEach(n=>{r.push(async()=>{const t=e[n];console.log("Loading GLB:",t);const a=await(0,o.tgdLoadGlb)(t);a&&(s.glb[n]=a)})}),n&&Object.keys(n).forEach(e=>{r.push(async()=>{const t=n[e],a=await(0,o.tgdLoadArrayBuffer)(t);a&&(s.data[e]=a)})}),t&&Object.keys(t).forEach(e=>{r.push(async()=>{const n=t[e],a=await(0,o.tgdLoadText)(n);a&&(s.text[e]=a)})}),await Promise.all(r.map(e=>e())),s}(u).then(e=>{try{t(a,e),a.paint()}catch(e){x(e instanceof Error?e.message:JSON.stringify(e))}k(!1)}).catch(e=>{console.error("Unable to initialize the scene!",e),k(!1)});const r=P.current;r&&r.attachContext(a)},X=e=>{const n=new o.TgdCanvasGizmo({canvas:e});P.current=n,n.eventTipClick.addListener(({to:e})=>{const n=C.current;n&&n.animSchedule({duration:.2,easingFunction:o.tgdEasingFunctionInOutCubic,action:(0,o.tgdActionCreateCameraInterpolation)(n.camera,{orientation:e})})});const t=C.current;t&&n.attachContext(t)};return s.useEffect(()=>{const e=j.current,n=C.current;if(!e||!n)return;const t=new ResizeObserver(()=>n.paint());return t.observe(e),e.requestFullscreen||(e.requestFullscreen=e.webkitRequestFullscreen),y(Boolean(e.requestFullscreen)),()=>t.unobserve(e)},[C.current,j.current]),d?(0,a.jsxs)("div",{ref:T,className:i.screen,style:{width:b?l:g,height:b?g:l},children:[(0,a.jsx)("canvas",{className:i.canvas,ref:_}),m&&(0,a.jsx)("canvas",{className:i.gizmo,ref:X}),p&&(0,a.jsx)("div",{className:i.error,children:p})]}):(0,a.jsxs)("div",{className:r.Sxu.classNames.join(e,i.Tgd),children:[(0,a.jsxs)("div",{className:r.Sxu.classNames.join(i.actions,!N&&i.enabled),children:[(0,a.jsx)("div",{children:(0,a.jsx)(r.I64,{onClick:()=>f(!b)})}),(0,a.jsx)("div",{children:(0,a.jsx)(r.kRc,{onClick:()=>{const e=C.current;e&&e.takeSnapshot().then(e=>{const n=document.createElement("a");document.body.appendChild(n),n.style.display="none",n.href=e.src,n.download="snapshot.png",n.click(),window.setTimeout(()=>document.body.removeChild(n),3e4)})}})}),w&&(0,a.jsx)("div",{children:(0,a.jsx)(r.L9n,{onClick:()=>{const e=T.current;e&&e.requestFullscreen()}})})]}),(0,a.jsxs)("div",{className:i.relative,children:[(0,a.jsxs)("div",{ref:T,className:i.screen,style:{width:b?l:g,height:b?g:l},children:[(0,a.jsx)("canvas",{className:i.canvas,ref:_}),m&&(0,a.jsx)("canvas",{className:i.gizmo,ref:X}),p&&(0,a.jsx)("div",{className:i.error,children:p})]}),(0,a.jsx)("div",{className:r.Sxu.classNames.join(i.overlay,N&&i.loading),children:(0,a.jsx)(c.A,{})}),h]})]})}},8453:(e,n,t)=>{t.d(n,{R:()=>o});var a=t(6540);const s=a.createContext({});function o(e){const n=a.useContext(s);return a.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}}}]);