"use strict";(self.webpackChunk_tolokoban_tgd=self.webpackChunk_tolokoban_tgd||[]).push([[2672],{2672:(n,e,t)=>{t.r(e),t.d(e,{default:()=>j});var a=t(4848),r=t(8453),o=t(6540),i=t(5968),s=t(2212),c=t(4461),l=t(6989);class d extends c.tbm{constructor(n,e){super(),this.context=n,this.texture=e,this.prg=new c.a6X(n.gl,{vert:["#version 300 es","in vec2 attPoint;","out vec2 varUV;","void main() {",["varUV = vec2(0.5) * (attPoint + vec2(1.0));","gl_Position = vec4(attPoint, 0.0, 1.0);"],"}"],frag:["#version 300 es","precision mediump float;","uniform sampler2D uniTexture;","in vec2 varUV;","out vec4 FragColor;","void main() {",["FragColor = texture(uniTexture, varUV);"],"}"]});const t=new c.I9j({attPoint:"vec2"});t.set("attPoint",new Float32Array([-1,1,1,1,-1,-1,1,-1])),this.vao=new c.ZV_(n.gl,this.prg,[t])}delete(){this.vao.delete(),this.prg.delete()}paint(n,e){const{context:t,prg:a,vao:r,texture:o}=this,{gl:i}=t;a.use(),o.activate(0,a,"uniTexture"),r.bind(),i.drawArrays(i.TRIANGLE_STRIP,0,4),r.unbind()}}function u(n){const e=153,t=255,a=255,r=153,o=new Uint8Array([0,e,t,0,e,t,0,e,t,0,e,t,0,e,t,0,0,e,t,a,r,0,a,r,0,a,r,0,0,e,t,0,0,e,t,0,e,t,a,r,0,0,e,t,0,e,t,0,0,e,t,0,e,t,a,r,0,0,e,t,0,e,t,0,0,e,t,0,e,t,0,e,t,0,e,t,0,e,t,0]),i=new c.HTX(n,{flipY:!0}).setParams({magFilter:"NEAREST"}).loadData(o,{width:5,height:5,internalFormat:"RGB8",format:"RGB"}),s=new d(n,i);n.add(s),n.paint()}function g(){return(0,a.jsx)(l.A,{onReady:u})}const h={"Detail #1":'    const r = 0x00\n    const g = 0x99\n    const b = 0xff\n    const R = 0xff\n    const G = 0x99\n    const B = 0x00\n    // prettier-ignore\n    const data = new Uint8Array([\n        r,g,b, r,g,b, r,g,b, r,g,b, r,g,b, /* padding -> */ 0,\n        r,g,b, R,G,B, R,G,B, R,G,B, r,g,b, /* padding -> */ 0,\n        r,g,b, r,g,b, R,G,B, r,g,b, r,g,b, /* padding -> */ 0,\n        r,g,b, r,g,b, R,G,B, r,g,b, r,g,b, /* padding -> */ 0,\n        r,g,b, r,g,b, r,g,b, r,g,b, r,g,b, /* padding -> */ 0,\n    ])\n    const texture = new TgdTexture2D(ctx, { flipY: true })\n        .setParams({\n            magFilter: "NEAREST",\n        })\n        .loadData(data, {\n            width: 5,\n            height: 5,\n            internalFormat: "RGB8",\n            format: "RGB",\n        })\n    const background = new Painter(ctx, texture)\n    ctx.add(background)\n    ctx.paint()'},x='import { TgdContext, TgdTexture2D } from "@tolokoban/tgd"\nimport View from "@/components/demo/Tgd"\nimport { Painter } from "./painter"\n\nfunction init(ctx: TgdContext) {\n    const r = 0x00\n    const g = 0x99\n    const b = 0xff\n    const R = 0xff\n    const G = 0x99\n    const B = 0x00\n    // prettier-ignore\n    const data = new Uint8Array([\n        r,g,b, r,g,b, r,g,b, r,g,b, r,g,b, /* padding -> */ 0,\n        r,g,b, R,G,B, R,G,B, R,G,B, r,g,b, /* padding -> */ 0,\n        r,g,b, r,g,b, R,G,B, r,g,b, r,g,b, /* padding -> */ 0,\n        r,g,b, r,g,b, R,G,B, r,g,b, r,g,b, /* padding -> */ 0,\n        r,g,b, r,g,b, r,g,b, r,g,b, r,g,b, /* padding -> */ 0,\n    ])\n    const texture = new TgdTexture2D(ctx, { flipY: true })\n        .setParams({\n            magFilter: "NEAREST",\n        })\n        .loadData(data, {\n            width: 5,\n            height: 5,\n            internalFormat: "RGB8",\n            format: "RGB",\n        })\n    const background = new Painter(ctx, texture)\n    ctx.add(background)\n    ctx.paint()\n}\n\nexport default function Demo() {\n    return <View onReady={init} />\n}\n\nconst COLORS: Record<string, [number, number, number]> = {\n    "0": [0, 0.333, 1],\n    "1": [1, 0.666, 0],\n}\n\nfunction makeRGB(...lines: string[]) {\n    const code = lines.join("")\n    const data: number[] = []\n    for (const line of lines) {\n        line.split("").map(digit => data.push(...(COLORS[digit] ?? [])))\n        let size = line.length * "RGB".length\n        while (size % 4 !== 0) {\n            data.push(0)\n            size++\n        }\n    }\n    return new Uint8Array(data.map(v => Math.floor(255 * v)))\n}\n';function f(){const[n,e]=o.useState(!1);return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)("div",{className:"half-left",children:(0,a.jsx)(g,{})}),(0,a.jsxs)("div",{className:"half-right",children:[(0,a.jsx)("div",{children:(0,a.jsx)(i.yQN,{variant:"elevated",onClick:()=>e(!n),children:n?"Show code details":"Show full code"})}),(0,a.jsx)(s.A,{language:"tsx",value:n?x:h})]})]})}class p extends c.tbm{constructor(n,e){super(),this.context=n,this.texture=e,this.prg=new c.a6X(n.gl,{vert:["#version 300 es","in vec2 attPoint;","out vec2 varUV;","void main() {",["varUV = vec2(0.5) * (attPoint + vec2(1.0));","gl_Position = vec4(attPoint, 0.0, 1.0);"],"}"],frag:["#version 300 es","precision mediump float;","uniform sampler2D uniTexture;","in vec2 varUV;","out vec4 FragColor;","void main() {",["FragColor = texture(uniTexture, varUV);"],"}"]});const t=new c.I9j({attPoint:"vec2"});t.set("attPoint",new Float32Array([-1,1,1,1,-1,-1,1,-1])),this.vao=new c.ZV_(n.gl,this.prg,[t])}delete(){this.vao.delete(),this.prg.delete()}paint(n,e){const{context:t,prg:a,vao:r,texture:o}=this,{gl:i}=t;a.use(),o.activate(0,a,"uniTexture"),r.bind(),i.drawArrays(i.TRIANGLE_STRIP,0,4),r.unbind()}}function m(n){const e=[0,153,255],t=[255,153,0],a=new c._uR(5,5,3);["     "," ### ","  #  ","  #  ","     "].forEach(((n,r)=>{n.split("").forEach(((n,o)=>a.setVec("#"===n?t:e,o,r)))}));const r=new Uint8Array(a.buffer);console.log("ðŸš€ [TBL] data = ",r);const o=new c.HTX(n,{flipY:!0}).setParams({magFilter:"NEAREST"}).loadData(r,{width:5,height:5,internalFormat:"RGB8",format:"RGB"}),i=new p(n,o);n.add(i),n.paint()}function b(){return(0,a.jsx)(l.A,{onReady:m})}const v={"Detail #1":'    const bg = [0x00, 0x99, 0xff]\n    const fg = [0xff, 0x99, 0x00]\n    // prettier-ignore\n    const pixels = [\n        "     ",\n        " ### ",\n        "  #  ",\n        "  #  ",\n        "     ",\n    ]\n    const table = new TgdTableUint8(5, 5, 3)\n    pixels.forEach((line, row) => {\n        line.split("").forEach((color, col) =>\n            table.setVec(color === "#" ? fg : bg, col, row)\n        )\n    })\n    const data = new Uint8Array(table.buffer)\n    console.log("ðŸš€ [TBL] data = ", data) // @FIXME: Remove this line written on 2025-02-04 at 16:49\n    const texture = new TgdTexture2D(ctx, { flipY: true })\n        .setParams({\n            magFilter: "NEAREST",\n        })\n        .loadData(data, {\n            width: 5,\n            height: 5,\n            internalFormat: "RGB8",\n            format: "RGB",\n        })\n    const background = new Painter(ctx, texture)\n    ctx.add(background)\n    ctx.paint()'},w='import { TgdContext, TgdTableUint8, TgdTexture2D } from "@tolokoban/tgd"\nimport View from "@/components/demo/Tgd"\nimport { Painter } from "./painter"\n\nfunction init(ctx: TgdContext) {\n    const bg = [0x00, 0x99, 0xff]\n    const fg = [0xff, 0x99, 0x00]\n    // prettier-ignore\n    const pixels = [\n        "     ",\n        " ### ",\n        "  #  ",\n        "  #  ",\n        "     ",\n    ]\n    const table = new TgdTableUint8(5, 5, 3)\n    pixels.forEach((line, row) => {\n        line.split("").forEach((color, col) =>\n            table.setVec(color === "#" ? fg : bg, col, row)\n        )\n    })\n    const data = new Uint8Array(table.buffer)\n    console.log("ðŸš€ [TBL] data = ", data) // @FIXME: Remove this line written on 2025-02-04 at 16:49\n    const texture = new TgdTexture2D(ctx, { flipY: true })\n        .setParams({\n            magFilter: "NEAREST",\n        })\n        .loadData(data, {\n            width: 5,\n            height: 5,\n            internalFormat: "RGB8",\n            format: "RGB",\n        })\n    const background = new Painter(ctx, texture)\n    ctx.add(background)\n    ctx.paint()\n}\n\nexport default function Demo() {\n    return <View onReady={init} />\n}\n\nconst COLORS: Record<string, [number, number, number]> = {\n    "0": [0, 0.333, 1],\n    "1": [1, 0.666, 0],\n}\n\nfunction makeRGB(...lines: string[]) {\n    const code = lines.join("")\n    const data: number[] = []\n    for (const line of lines) {\n        line.split("").map(digit => data.push(...(COLORS[digit] ?? [])))\n        let size = line.length * "RGB".length\n        while (size % 4 !== 0) {\n            data.push(0)\n            size++\n        }\n    }\n    return new Uint8Array(data.map(v => Math.floor(255 * v)))\n}\n';function R(){const[n,e]=o.useState(!1);return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)("div",{className:"half-left",children:(0,a.jsx)(b,{})}),(0,a.jsxs)("div",{className:"half-right",children:[(0,a.jsx)("div",{children:(0,a.jsx)(i.yQN,{variant:"elevated",onClick:()=>e(!n),children:n?"Show code details":"Show full code"})}),(0,a.jsx)(s.A,{language:"tsx",value:n?w:v})]})]})}function y(n){const e={code:"code",h1:"h1",p:"p",strong:"strong",...(0,r.R)(),...n.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(e.h1,{children:"Texture2D from data"}),"\n",(0,a.jsxs)(e.p,{children:["Sending data to a texture is more tricky than expected becaue you have to care\ncare of ",(0,a.jsx)(e.strong,{children:"memory alignement"}),"."]}),"\n",(0,a.jsxs)(e.p,{children:["Each row of your data must have a number of bytes that is an integral ",(0,a.jsx)(e.strong,{children:"multiple\nof 4"}),"."]}),"\n",(0,a.jsxs)(e.p,{children:["In the following example, we are using only 3 bytes per pixel because we\nspecified RGB as format. Since we want a width of 5, we end up with ",(0,a.jsx)(e.strong,{children:"15 bytes"}),"\nin a row. We cannot divide 15 by 4, so we ",(0,a.jsx)(e.strong,{children:"MUST add a padding"})," value at the\nend of the row to have 16 bytes."]}),"\n",(0,a.jsx)(e.p,{children:"If the width you want is 3, for example, then you will need a padding of 3\nbytes."}),"\n",(0,a.jsx)(f,{}),"\n",(0,a.jsxs)(e.p,{children:["This padding can be error prone. To help you, you can use ",(0,a.jsx)(e.code,{children:"TgdTable*"})," classes:"]}),"\n",(0,a.jsx)(R,{})]})}function j(n={}){const{wrapper:e}={...(0,r.R)(),...n.components};return e?(0,a.jsx)(e,{...n,children:(0,a.jsx)(y,{...n})}):y(n)}},3469:(n,e,t)=>{t.d(e,{A:()=>s});var a=t(1601),r=t.n(a),o=t(6314),i=t.n(o)()(r());i.push([n.id,".hgIjhDQIuBCJEQ4ZgLXp {\n    display: inline-block;\n    margin: 1em;\n}\n\n.hgIjhDQIuBCJEQ4ZgLXp canvas {\n    box-shadow: 0 0.25em 0.5em #fff1;\n    max-width: 100vw;\n    max-height: 100vh;\n}\n\n.efOyHCihw9wfMB6AaAqw {\n    position: relative;\n}\n\n.ywC8N0Uxbvm2Ug2DwPkE {\n    position: absolute;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    pointer-events: none;\n    background-color: var(--theme-color-primary-1);\n    opacity: 0;\n    transition: opacity 0.3s;\n}\n\n.ywC8N0Uxbvm2Ug2DwPkE.PBWSRsbiwEqGpeL0hEfm {\n    opacity: 1;\n}\n\n.BErChOLWGtciKhh3IFud {\n    position: relative;    \n}\n\n.BErChOLWGtciKhh3IFud > canvas.fT7FcYouYlPbElIAEXRP {\n    position: absolute;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n}\n\n.BErChOLWGtciKhh3IFud > canvas.uAPfWt_Dhe7RaRrnmIu0 {\n    position: absolute;\n    right: 0;\n    top: 0;\n    width: 128px;\n    height: 128px;\n    box-shadow: none;\n    border: none;\n}",""]),i.locals={Tgd:"hgIjhDQIuBCJEQ4ZgLXp",relative:"efOyHCihw9wfMB6AaAqw",overlay:"ywC8N0Uxbvm2Ug2DwPkE",loading:"PBWSRsbiwEqGpeL0hEfm",screen:"BErChOLWGtciKhh3IFud",canvas:"fT7FcYouYlPbElIAEXRP",gizmo:"uAPfWt_Dhe7RaRrnmIu0"};const s=i},6989:(n,e,t)=>{t.d(e,{A:()=>j});var a=t(4848),r=t(6540),o=t(4461),i=t(5968),s=t(5670),c=t(5072),l=t.n(c),d=t(7825),u=t.n(d),g=t(7659),h=t.n(g),x=t(5056),f=t.n(x),p=t(540),m=t.n(p),b=t(1113),v=t.n(b),w=t(3469),R={};R.styleTagTransform=v(),R.setAttributes=f(),R.insert=h().bind(null,"head"),R.domAPI=u(),R.insertStyleElement=m(),l()(w.A,R);const y=w.A&&w.A.locals?w.A.locals:void 0;function j({className:n,options:e,onReady:t,gizmo:c=!1,width:l="640px",height:d="480px",noBorder:u=!1,assets:g,children:h}){const[x,f]=r.useState(!0),[p,m]=r.useState(!1),b=r.useRef(null),v=r.useRef(null),w=r.useRef(null),R=r.useRef(null),[j,T]=r.useState(!0);let E="auto";l.endsWith("px")&&d.endsWith("px")&&(l.substring(l.length-2),d.substring(d.length-2));const B=n=>{if(!n)return;if(v.current)return;v.current=n;const a=new o.tfp(n,e);b.current=a,T(!0),async function({glb:n,data:e,text:t,image:a}={}){console.log("ðŸš€ [Tgd] glb, data, text, image = ",n,e,t,a);const r={glb:{},data:{},text:{},image:{}},i=[];return a&&Object.keys(a).forEach((n=>{i.push((async()=>{const e=a[n];console.log("Loading image:",e);const t=await(0,o.V_9)(e);t&&(r.image[n]=t)}))})),n&&Object.keys(n).forEach((e=>{i.push((async()=>{const t=n[e];console.log("Loading GLB:",t);const a=await(0,o.TCe)(t);a&&(r.glb[e]=a)}))})),e&&Object.keys(e).forEach((n=>{i.push((async()=>{const t=e[n],a=await(0,o.vSU)(t);a&&(r.data[n]=a)}))})),t&&Object.keys(t).forEach((n=>{i.push((async()=>{const e=t[n],a=await(0,o.jWq)(e);a&&(r.text[n]=a)}))})),await Promise.all(i.map((n=>n()))),r}(g).then((n=>{console.log("Ready!"),t(a,n),a.paint(),T(!1)})).catch((n=>{console.error("Unable to initialize the scene!",n),T(!1)}));const r=w.current;r&&r.attachContext(a)},A=n=>{const e=new o.GbF({canvas:n});w.current=e,e.eventTipClick.addListener((({to:n})=>{const e=b.current;console.log("ðŸš€ [tgd] to, context =",n,e),e&&e.animSchedule({duration:.2,easingFunction:o.Wcc,action:(0,o.vRM)(e.camera,{orientation:n})})}));const t=b.current;t&&e.attachContext(t)};return r.useEffect((()=>{const n=v.current,e=b.current;if(!n||!e)return;const t=new ResizeObserver((()=>e.paint()));return t.observe(n),n.requestFullscreen||(n.requestFullscreen=n.webkitRequestFullscreen),m(Boolean(n.requestFullscreen)),()=>t.unobserve(n)}),[b.current,v.current]),u?(0,a.jsxs)("div",{ref:R,className:y.screen,style:{width:x?l:d,height:x?d:l},children:[(0,a.jsx)("canvas",{className:y.canvas,ref:B}),c&&(0,a.jsx)("canvas",{className:y.gizmo,ref:A})]}):(0,a.jsxs)("div",{className:i.Sxu.classNames.join(n,y.Tgd),children:[(0,a.jsxs)(i.sWC,{display:"flex",justifyContent:"space-between",children:[(0,a.jsx)(i.yQN,{variant:"elevated",onClick:()=>f(!x),enabled:!j,children:x?"Switch to Portrait":"Switch to Landscape"}),p&&(0,a.jsx)(i.yQN,{variant:"elevated",onClick:()=>{const n=R.current;n&&n.requestFullscreen()},enabled:!j,children:"Fullscreen"})]}),(0,a.jsxs)("div",{className:y.relative,children:[(0,a.jsxs)("div",{ref:R,className:y.screen,style:{width:x?l:d,height:x?d:l},children:[(0,a.jsx)("canvas",{className:y.canvas,ref:B}),c&&(0,a.jsx)("canvas",{className:y.gizmo,ref:A})]}),(0,a.jsx)("div",{className:i.Sxu.classNames.join(y.overlay,j&&y.loading),children:(0,a.jsx)(s.A,{})}),h]})]})}},8453:(n,e,t)=>{t.d(e,{R:()=>o});var a=t(6540);const r=a.createContext({});function o(n){const e=a.useContext(r);return a.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}}}]);