"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[700],{8700:(e,n,r)=>{r.r(n),r.d(n,{default:()=>i});var a=r(7624);function s(e){const n={a:"a",code:"code",h1:"h1",li:"li",p:"p",strong:"strong",ul:"ul",...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h1,{children:"Painters"}),"\n",(0,a.jsxs)(n.p,{children:["A ",(0,a.jsx)(n.strong,{children:"Painter"})," is a class that paints the WebGL canvas. Yon can create your own\nby ingeriting the abstract class ",(0,a.jsx)(n.code,{children:"TgdPainter"}),", or use an existing one."]}),"\n",(0,a.jsxs)(n.p,{children:["You can chain several painters in a ",(0,a.jsx)(n.code,{children:"TgdPainterGroup"}),". Thaye will be called in\nthe order they are inserted."]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"TgdContext"})," has an internal ",(0,a.jsx)(n.code,{children:"TgdPainterGroup"}),". That's why, you can see in many\nexamples that we add painters directly to it."]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.a,{href:"#/painter/clear",children:"Clear"}),": fill all the pixels of the canvas with a unique\ncolor."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.a,{href:"#/painter/logic",children:"Logic"}),": update the status of your scene at every frame."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.a,{href:"#/painter/background",children:"Background"}),": fill the background with an image."]}),"\n"]})]})}function i(e={}){const{wrapper:n}=e.components||{};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(s,{...e})}):s(e)}}}]);