"use strict";(self.webpackChunk_tolokoban_tgd=self.webpackChunk_tolokoban_tgd||[]).push([[147],{7192:(e,t,a)=>{a.d(t,{A:()=>s});var r=a(1601),n=a.n(r),i=a(6314),o=a.n(i)()(n());o.push([e.id,".lReXzQflWun_9Q7_SNCV {\n    position: absolute;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n}\n",""]),o.locals={filter:"lReXzQflWun_9Q7_SNCV"};const s=o},3423:(e,t,a)=>{a.d(t,{A:()=>s});var r=a(1601),n=a.n(r),i=a(6314),o=a.n(i)()(n());o.push([e.id,".rkDhSoMjifhuRueu54Nd canvas {\n    background-color: #333;\n}\n",""]),o.locals={filterresult:"rkDhSoMjifhuRueu54Nd"};const s=o},3687:(e,t,a)=>{a.d(t,{A:()=>s});var r=a(1601),n=a.n(r),i=a(6314),o=a.n(i)()(n());o.push([e.id,".LzpyYTOcJZJzRd22cQCu {\n}\n",""]),o.locals={vertexshadercodeeditor:"LzpyYTOcJZJzRd22cQCu"};const s=o},3023:(e,t,a)=>{a.d(t,{A:()=>s});var r=a(1601),n=a.n(r),i=a(6314),o=a.n(i)()(n());o.push([e.id,'div.view-CodeEditorView {\n    position: relative;\n    margin: 0;\n    font-family: Consolas, Monaco, "Andale Mono", "Ubuntu Mono", monospace;\n    font-size: 1rem;\n    color: #fffb;\n    background-color: #333;\n    padding: 1em;\n    line-height: 1.2;\n}\n\ndiv.view-CodeEditorView pre .comment {\n    color: #fff7;\n}\n\ndiv.view-CodeEditorView pre .number {\n    color: #fff;\n    font-weight: bolder;\n}\n\ndiv.view-CodeEditorView pre .type {\n    color: #cf9;\n}\n\ndiv.view-CodeEditorView pre .keyword {\n    color: #07f;\n}\n\ndiv.view-CodeEditorView pre .global {\n    color: #f70;\n}\n\ndiv.view-CodeEditorView pre .function {\n    color: #ed0;\n    font-weight: bold;\n}',""]);const s=o},8070:(e,t,a)=>{a.r(t),a.d(t,{default:()=>$});var r=a(4848),n=a(8766),i=a(5072),o=a.n(i),s=a(7825),l=a.n(s),d=a(7659),c=a.n(d),u=a(5056),m=a.n(u),f=a(540),p=a.n(f),g=a(1113),h=a.n(g),x=a(7192),v={};v.styleTagTransform=h(),v.setAttributes=m(),v.insert=c().bind(null,"head"),v.domAPI=l(),v.insertStyleElement=p(),o()(x.A,v);const D=x.A&&x.A.locals?x.A.locals:void 0;var A=a(6069),y=a.n(A),b=a(8848),w=a.n(b);const S={comment:[{pattern:/(^|[^\\])\/\*[\s\S]*?(?:\*\/|$)/g,lookbehind:!0,greedy:!0},{pattern:/"(^|[^\\:])\/\/.*"/g,lookbehind:!0,greedy:!0}],number:{pattern:/(^|[^\w$])(?:NaN|Infinity|0[bB][01]+(?:_[01]+)*n?|0[oO][0-7]+(?:_[0-7]+)*n?|0[xX][\dA-Fa-f]+(?:_[\dA-Fa-f]+)*n?|\d+(?:_\d+)*n|(?:\d+(?:_\d+)*(?:\.(?:\d+(?:_\d+)*)?)?|\.\d+(?:_\d+)*)(?:[Ee][+-]?\d+(?:_\d+)*)?)(?![\w$])/,lookbehind:!0},type:C(["bvec2","bvec3","bvec4","dmat2","dmat2x2","dmat2x3","dmat2x4","dmat3","dmat3x2","dmat3x3","dmat3x4","dmat4","dmat4x2","dmat4x3","dmat4x4","dvec2","dvec3","dvec4","float","fvec2","fvec3","fvec4","isampler1D","isampler1DArray","isampler2D","isampler2DArray","isampler2DMS","isampler2DMSArray","isampler2DRect","isampler3D","isamplerBuffer","isamplerCube","isamplerCubeArray","ivec2","ivec3","ivec4","mat2","mat2x2","mat2x3","mat2x4","mat3","mat3x2","mat3x3","mat3x4","mat4","mat4x2","mat4x3","mat4x4","sample","sampler1D","sampler1DArray","sampler1DArrayShadow","sampler1DShadow","sampler2D","sampler2DArray","sampler2DArrayShadow","sampler2DMS","sampler2DMSArray","sampler2DRect","sampler2DRectShadow","sampler2DShadow","sampler3D","samplerBuffer","samplerCube","samplerCubeArray","samplerCubeArrayShadow","samplerCubeShadow","usampler1D","usampler1DArray","usampler2D","usampler2DArray","usampler2DMS","usampler2DMSArray","usampler2DRect","usampler3D","usamplerBuffer","usamplerCube","usamplerCubeArray","uvec2","uvec3","uvec4","vec2","vec3","vec4","void"]),keyword:C(["centroid","const","discard","else","flat","highp","if","in","inout","invariant","layout","lowp","mediump","noperspective","out","patch","precision","smooth","subroutine","uniform","active","asm","cast","class","common","enum","extern","external","filter","fixed","goto","half","hvec2","hvec3","hvec4","iimage1D","iimage1DArray","iimage2D","iimage2DArray","iimage3D","iimageBuffer","iimageCube","image1D","image1DArray","image1DArrayShadow","image1DShadow","image2D","image2DArray","image2DArrayShadow","image2DShadow","image3D","imageBuffer","imageCube","inline","input","interface","long","namespace","noinline","output","packed","partition","public","row_major","sampler3DRect","short","sizeof","static","superp","template","this","typedef","uimage1D","uimage1DArray","uimage2D","uimage2DArray","uimage3D","uimageBuffer","uimageCube","union","unsigned","using","volatile"]),global:C(["gl_DepthRange","gl_DepthRange.diff","gl_DepthRange.far","gl_DepthRange.near","gl_FragCoord","gl_FragDepth","gl_FrontFacing","gl_InstanceID","gl_PointCoord","gl_PointSize","gl_Position","gl_VertexID"]),function:C(["abs","acos","acosh","all","any","asin","asinh","atan","atanh","ceil","clamp","cos","cosh","cross","degrees","determinant","dFdx","dFdy","distance","dot","equal","exp","exp2","faceforward","floatBitsToInt","floatBitsToUint","floor","fract","fwidth","greaterThan","greaterThanEqual","intBitsToFloat","inverse","inversesqrt","isinf","isnan","length","lessThan","lessThanEqual","log","log2","matrixCompMult","max","min","mix","mod","modf","normalize","not","notEqual","outerProduct","packHalf2x16","packSnorm2x16","packUnorm2x16","pow","radians","reflect","refract","round","roundEven","sign","sin","sinh","smoothstep","sqrt","step","tan","tanh","texelFetch","texelFetchOffset","texture","textureGrad","textureGradOffset","textureLod","textureLodOffset","textureOffset","textureProj","textureProjGrad","textureProjGradOffset","textureProjLod","textureProjLodOffset","textureProjOffset","textureSize","transpose","trunc","uintBitsToFloat","unpackHalf2x16","unpackSnorm2x16","unpackUnorm2x16"])};function C(e){return new RegExp(`(?:[^a-zA-Z0-9_])(${e.join("|")})(?=[^a-zA-Z0-9_])`)}var _=a(3023),j={};function k(e){return(0,r.jsx)("div",{className:T(e),children:(0,r.jsx)(y(),{value:e.value,onValueChange:e.onChange,highlight:t=>w().highlight(t,(e.language,S),e.language)})})}function T(e){const t=["custom","view-CodeEditorView"];return"string"==typeof e.className&&t.push(e.className),t.join(" ")}j.styleTagTransform=h(),j.setAttributes=m(),j.insert=c().bind(null,"head"),j.domAPI=l(),j.insertStyleElement=p(),o()(_.A,j),_.A&&_.A.locals&&_.A.locals;var E=a(3687),F={};F.styleTagTransform=h(),F.setAttributes=m(),F.insert=c().bind(null,"head"),F.domAPI=l(),F.insertStyleElement=p(),o()(E.A,F);const N=E.A&&E.A.locals?E.A.locals:void 0,R=n.Sxu.classNames;function V(e){return(0,r.jsx)(n.WET,Object.assign({className:R.join(e.className,N.vertexshadercodeeditor)},e,{children:(0,r.jsx)(n.Zdo,{label:"Fragment Shader",children:(0,r.jsx)(k,{language:"glsl",value:e.code,onChange:e.onChange})},"shader")}))}var P=a(6540),z=a(50);const M=a.p+"img/background.e36d8bcea648aedea166.avif";class O{constructor(e){this.filter=null;const t=new z.tf(e);this.context=t;const a=t.textures2D.create({image:M,width:1920,height:1080});this.texture=a,this.destroy=()=>{t.textures2D.delete(a),t.destroy()}}set code(e){try{const{context:t,texture:a}=this,r=new z.D$(t,{texture:a,filters:[new z.Ei({fragmentShaderCode:e,uniforms:{uniTime:"float"},setUniforms(e,t){e.uniform1f("uniTime",t)}})]});this.filter&&this.context.remove(this.filter),this.filter=r,t.add(r),t.play()}catch(e){console.log("ðŸš€ [manager] ex = ",e)}}}var B=a(3423),I={};I.styleTagTransform=h(),I.setAttributes=m(),I.insert=c().bind(null,"head"),I.domAPI=l(),I.insertStyleElement=p(),o()(B.A,I);const U=B.A&&B.A.locals?B.A.locals:void 0,q=n.Sxu.classNames;function L(e){const[t,a]=P.useState(null),i=P.useRef(null);return P.useEffect((()=>{const t=i.current;t&&(t.code=e.fragmentShader)}),[e.fragmentShader]),P.useEffect((()=>()=>{var e;null===(e=i.current)||void 0===e||e.destroy()}),[]),(0,r.jsxs)(n.UkC,Object.assign({className:q.join(e.className,U.filterresult),template:"*1",orientation:"column"},e,{children:[(0,r.jsx)(n.sWC,{color:"primary-5",height:"2em",display:"flex",justifyContent:"start",alignItems:"center",padding:"M",children:"Filter output"}),!t&&(0,r.jsx)("canvas",{ref:t=>{t&&(i.current||(i.current=new O(t)),i.current.code=e.fragmentShader)}})]}))}function Q(){const[e,t]=(0,n.Vcb)(Z,"Filter/FragementShader");return(0,r.jsxs)(n.UkC,{className:D.filter,template:"12",orientation:"row",children:[(0,r.jsx)(V,{code:e,onChange:t}),(0,r.jsx)(L,{fragmentShader:e})]})}n.Sxu.classNames;const Z=["vec4 pixel = vec4(0, 0, 0, 1);","vec2 dir = 2.0 * (vec2(0.5) - varUV);","float len = dot(dir, dir);","float ripple = sin(uniTime * 0.01) * .2;","dir *= 0.1 * smoothstep(0.5 + ripple, 1.4 ,len);","float radius = 0.0;","for (int i=0; i<16; i++) {",["vec4 color = texture(uniTexture, varUV + dir * radius);","radius += 0.05;","pixel += color;"],"}","pixel /= 16.0;","FragColor = pixel;"].join("\n");function $(){return(0,r.jsx)(Q,{})}}}]);