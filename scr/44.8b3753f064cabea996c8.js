"use strict";(self.webpackChunk_tolokoban_tgd=self.webpackChunk_tolokoban_tgd||[]).push([[44],{1044:(n,e,t)=>{t.r(e),t.d(e,{default:()=>f});var a=t(4848),s=t(8453),r=t(6540),l=t(8766),i=t(2261),c=t(9827),o=t(4088),d=t(7979);function g(n,e){const t=new c.xN({distance:3,far:100,near:.01,fovy:Math.PI/4,zoom:1});n.camera=t,new c.pw(n,{speedPanning:0,inertiaOrbit:1e3}),n.add(new c.o5(n,{depth:1,stencil:0}),new c.b6(n,n.textures2D.create({image:d})),new c.Ip(n,{depth:c.Eg.less,cull:c.Tf.front,children:[new c.dR(n,{asset:e.glb.suzanne,materialFactory:()=>new c.qD({color:[0,0,0,1],expansion:.05})})]}),new c.Ip(n,{depth:c.Eg.less,cull:c.Tf.back,children:[new c.dR(n,{asset:e.glb.suzanne})]})),n.paint()}function h(){return(0,a.jsx)(o.A,{onReady:g,options:{depth:!0,antialias:!0},assets:{glb:{suzanne:"/mesh/suzanne.glb"}}})}const u={"Detail #1":"    const camera = new TgdCameraPerspective({\n        distance: 3,\n        far: 100,\n        near: 0.01,\n        fovy: Math.PI / 4,\n        zoom: 1,\n    })\n    ctx.camera = camera\n    new TgdControllerCameraOrbit(ctx, {\n        speedPanning: 0,\n        inertiaOrbit: 1000,\n    })\n    ctx.add(\n        new TgdPainterClear(ctx, {\n            depth: 1,\n            stencil: 0,\n        }),\n        new TgdPainterBackground(\n            ctx,\n            ctx.textures2D.create({\n                image: BackgroundURL,\n            })\n        ),\n        new TgdPainterState(ctx, {\n            depth: webglPresetDepth.less,\n            cull: webglPresetCull.front,\n            children: [\n                new TgdPainterMeshGltf(ctx, {\n                    asset: assets.glb.suzanne,\n                    materialFactory: () =>\n                        new TgdMaterialHull({\n                            color: [0, 0, 0, 1],\n                            expansion: 0.05,\n                        }),\n                }),\n            ],\n        }),\n        new TgdPainterState(ctx, {\n            depth: webglPresetDepth.less,\n            cull: webglPresetCull.back,\n            children: [\n                new TgdPainterMeshGltf(ctx, {\n                    asset: assets.glb.suzanne,\n                }),\n            ],\n        })\n    )\n    ctx.paint()"},x='import {\n    TgdCameraPerspective,\n    TgdContext,\n    TgdControllerCameraOrbit,\n    TgdMaterialHull,\n    TgdMaterialSolid,\n    TgdPainterBackground,\n    TgdPainterClear,\n    TgdPainterMeshGltf,\n    TgdPainterState,\n    webglPresetCull,\n    webglPresetDepth,\n    webglPresetStencil,\n} from "@tolokoban/tgd"\nimport View, { Assets } from "@/components/demo/Tgd"\n\nimport BackgroundURL from "@/gfx/image/dino.webp"\n\nfunction init(ctx: TgdContext, assets: Assets) {\n    const camera = new TgdCameraPerspective({\n        distance: 3,\n        far: 100,\n        near: 0.01,\n        fovy: Math.PI / 4,\n        zoom: 1,\n    })\n    ctx.camera = camera\n    new TgdControllerCameraOrbit(ctx, {\n        speedPanning: 0,\n        inertiaOrbit: 1000,\n    })\n    ctx.add(\n        new TgdPainterClear(ctx, {\n            depth: 1,\n            stencil: 0,\n        }),\n        new TgdPainterBackground(\n            ctx,\n            ctx.textures2D.create({\n                image: BackgroundURL,\n            })\n        ),\n        new TgdPainterState(ctx, {\n            depth: webglPresetDepth.less,\n            cull: webglPresetCull.front,\n            children: [\n                new TgdPainterMeshGltf(ctx, {\n                    asset: assets.glb.suzanne,\n                    materialFactory: () =>\n                        new TgdMaterialHull({\n                            color: [0, 0, 0, 1],\n                            expansion: 0.05,\n                        }),\n                }),\n            ],\n        }),\n        new TgdPainterState(ctx, {\n            depth: webglPresetDepth.less,\n            cull: webglPresetCull.back,\n            children: [\n                new TgdPainterMeshGltf(ctx, {\n                    asset: assets.glb.suzanne,\n                }),\n            ],\n        })\n    )\n    ctx.paint()\n}\n\nexport default function Demo() {\n    return (\n        <View\n            onReady={init}\n            options={{\n                depth: true,\n                antialias: true,\n            }}\n            assets={{\n                glb: {\n                    suzanne: "/mesh/suzanne.glb",\n                },\n            }}\n        />\n    )\n}\n';function p(){const[n,e]=r.useState(!1);return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)("div",{className:"half-left",children:(0,a.jsx)(h,{})}),(0,a.jsxs)("div",{className:"half-right",children:[(0,a.jsx)("div",{children:(0,a.jsx)(l.yQN,{variant:"elevated",onClick:()=>e(!n),children:n?"Show code details":"Show full code"})}),(0,a.jsx)(i.A,{language:"tsx",value:n?x:u})]})]})}function w(n){const e={a:"a",h1:"h1",hr:"hr",li:"li",ol:"ol",p:"p",...(0,s.R)(),...n.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(e.h1,{children:"Cull"}),"\n",(0,a.jsx)(e.p,{children:"We can paint FRONT, BACK or BOTH faces. MOst of the time you will only want to\ndisplay FRONT faces because BACK faces should be invisible. But in this demo, we\nuse the back faces to create an effect of outilining of a mesh."}),"\n",(0,a.jsx)(e.p,{children:"This render has three passes:"}),"\n",(0,a.jsxs)(e.ol,{children:["\n",(0,a.jsx)(e.li,{children:"Paint the background"}),"\n",(0,a.jsx)(e.li,{children:"Paint FRONT faces of the mesh"}),"\n",(0,a.jsx)(e.li,{children:"Paint BACK faces of an expanded (a little bit only) mesh"}),"\n"]}),"\n",(0,a.jsx)(p,{}),"\n",(0,a.jsx)(e.hr,{}),"\n",(0,a.jsx)(e.p,{children:(0,a.jsx)(e.a,{href:"#/articles/state",children:"Back"})})]})}function f(n={}){const{wrapper:e}={...(0,s.R)(),...n.components};return e?(0,a.jsx)(e,{...n,children:(0,a.jsx)(w,{...n})}):w(n)}}}]);