"use strict";(self.webpackChunk_tolokoban_tgd=self.webpackChunk_tolokoban_tgd||[]).push([[675],{4675:(e,a,n)=>{n.r(a),n.d(a,{default:()=>g});var t=n(4848),r=n(8453),o=n(6540),s=n(8766),i=n(2212),l=n(8254);function c(){return(0,t.jsx)("canvas",{ref:e=>{e&&function(e){console.log("TR",1);const a=new l.tf(e),n=new l.o5(a,{color:[1,.7,0,1]});a.add(n),e.addEventListener("click",(()=>{n.red=Math.random(),n.green=Math.random(),n.blue=Math.random(),a.paint()})),a.paint()}(e)},style:{width:"320px",height:"240px",background:"#000"}})}const d='function init(canvas: HTMLCanvasElement): TgdContext {\n    console.log("TR", 1)\n    const ctx = new TgdContext(canvas)\n    const clear = new TgdPainterClear(ctx, { color: [1, 0.7, 0, 1] })\n    ctx.add(clear)\n    canvas.addEventListener("click", () => {\n        clear.red = Math.random()\n        clear.green = Math.random()\n        clear.blue = Math.random()\n        ctx.paint()\n    })\n    ctx.paint()\n    return ctx\n}',u='import { TgdContext, TgdPainterClear } from "@tolokoban/tgd"\n\nfunction init(canvas: HTMLCanvasElement): TgdContext {\n    console.log("TR", 1)\n    const ctx = new TgdContext(canvas)\n    const clear = new TgdPainterClear(ctx, { color: [1, 0.7, 0, 1] })\n    ctx.add(clear)\n    canvas.addEventListener("click", () => {\n        clear.red = Math.random()\n        clear.green = Math.random()\n        clear.blue = Math.random()\n        ctx.paint()\n    })\n    ctx.paint()\n    return ctx\n}\n\nexport default function Demo() {\n    const handleMount = (canvas: HTMLCanvasElement | null) => {\n        if (canvas) init(canvas)\n    }\n    return (\n        <canvas\n            ref={handleMount}\n            style={{\n                width: "320px",\n                height: "240px",\n                background: "#000",\n            }}\n        ></canvas>\n    )\n}\n';function m(){const[e,a]=o.useState(!1);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)("div",{className:"half-left",children:(0,t.jsx)(c,{})}),(0,t.jsxs)("div",{className:"half-right",children:[(0,t.jsx)("button",{style:{all:"inherit",display:"contents"},onClick:()=>a(!e),children:(0,t.jsxs)(s.sWC,{display:"flex",gap:".5em",children:[(0,t.jsx)("input",{type:"checkbox",checked:e,onChange:()=>a(!e)}),(0,t.jsx)("label",{style:{cursor:"pointer"},children:"Afficher le code complet"})]})}),(0,t.jsx)(i.A,{language:"tsx",value:e?u:d})]})]})}function p(e){const a={a:"a",h1:"h1",h2:"h2",p:"p",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(a.h1,{children:(0,t.jsx)(a.a,{href:"docs/classes/TgdPainterClear.html",children:"TgdPainterClear"})}),"\n",(0,t.jsx)(a.p,{children:"How to fill all the pixels of the canvas with a unique color."}),"\n",(0,t.jsx)(a.h2,{children:"Example"}),"\n",(0,t.jsx)(a.p,{children:"Click the canvas (the rectangle below) to set an new random color."}),"\n",(0,t.jsx)(m,{})]})}function g(e={}){const{wrapper:a}={...(0,r.R)(),...e.components};return a?(0,t.jsx)(a,{...e,children:(0,t.jsx)(p,{...e})}):p(e)}},1637:(e,a,n)=>{n.d(a,{A:()=>i});var t=n(1601),r=n.n(t),o=n(6314),s=n.n(o)()(r());s.push([e.id,'.wG5Gt8UucKgObpD7Yp3g {\n    display: inline-block;\n    position: relative;\n    font-family: Consolas, Monaco, "Andale Mono", "Ubuntu Mono", monospace;\n    font-size: 0.9rem;\n    margin: 0.5em;\n    background: #0d1117;\n    padding: 0.5em;\n    overflow: auto;\n    box-shadow: 0 0.25em 0.5em #fff1;\n}\n\n.WFvjeSIkQyiXg5gY8rSw {\n    position: absolute;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    display: grid;\n    place-items: center;\n}\n\n.WFvjeSIkQyiXg5gY8rSw > div {\n    background: var(--theme-color-secondary-5);\n    color: var(--theme-color-on-secondary-5);\n}\n',""]),s.locals={CodeViewer:"wG5Gt8UucKgObpD7Yp3g",popup:"WFvjeSIkQyiXg5gY8rSw"};const i=s},2212:(e,a,n)=>{n.d(a,{A:()=>C});var t=n(4848),r=n(6540),o=n(8848),s=n.n(o);n(5723),n(5903),n(9587),n(2769),n(271),n(3980);const i={comment:[{pattern:/(^|[^\\])\/\*[\s\S]*?(?:\*\/|$)/g,lookbehind:!0,greedy:!0},{pattern:/(^|[^\\:])\/\/.*/g,lookbehind:!0,greedy:!0},{pattern:/^#.+$/g,lookbehind:!1,greedy:!0}],number:{pattern:/(^|[^\w$])(?:NaN|Infinity|0[bB][01]+(?:_[01]+)*n?|0[oO][0-7]+(?:_[0-7]+)*n?|0[xX][\dA-Fa-f]+(?:_[\dA-Fa-f]+)*n?|\d+(?:_\d+)*n|(?:\d+(?:_\d+)*(?:\.(?:\d+(?:_\d+)*)?)?|\.\d+(?:_\d+)*)(?:[Ee][+-]?\d+(?:_\d+)*)?)(?![\w$])/,lookbehind:!0},type:l(["bvec2","bvec3","bvec4","dmat2","dmat2x2","dmat2x3","dmat2x4","dmat3","dmat3x2","dmat3x3","dmat3x4","dmat4","dmat4x2","dmat4x3","dmat4x4","dvec2","dvec3","dvec4","float","fvec2","fvec3","fvec4","isampler1D","isampler1DArray","isampler2D","isampler2DArray","isampler2DMS","isampler2DMSArray","isampler2DRect","isampler3D","isamplerBuffer","isamplerCube","isamplerCubeArray","ivec2","ivec3","ivec4","mat2","mat2x2","mat2x3","mat2x4","mat3","mat3x2","mat3x3","mat3x4","mat4","mat4x2","mat4x3","mat4x4","sample","sampler1D","sampler1DArray","sampler1DArrayShadow","sampler1DShadow","sampler2D","sampler2DArray","sampler2DArrayShadow","sampler2DMS","sampler2DMSArray","sampler2DRect","sampler2DRectShadow","sampler2DShadow","sampler3D","samplerBuffer","samplerCube","samplerCubeArray","samplerCubeArrayShadow","samplerCubeShadow","usampler1D","usampler1DArray","usampler2D","usampler2DArray","usampler2DMS","usampler2DMSArray","usampler2DRect","usampler3D","usamplerBuffer","usamplerCube","usamplerCubeArray","uvec2","uvec3","uvec4","vec2","vec3","vec4","void"]),keyword:l(["centroid","const","discard","else","flat","highp","if","in","inout","invariant","layout","lowp","mediump","noperspective","out","patch","precision","smooth","subroutine","uniform","active","asm","cast","class","common","enum","extern","external","filter","fixed","goto","half","hvec2","hvec3","hvec4","iimage1D","iimage1DArray","iimage2D","iimage2DArray","iimage3D","iimageBuffer","iimageCube","image1D","image1DArray","image1DArrayShadow","image1DShadow","image2D","image2DArray","image2DArrayShadow","image2DShadow","image3D","imageBuffer","imageCube","inline","input","interface","long","namespace","noinline","output","packed","partition","public","row_major","sampler3DRect","short","sizeof","static","superp","template","this","typedef","uimage1D","uimage1DArray","uimage2D","uimage2DArray","uimage3D","uimageBuffer","uimageCube","union","unsigned","using","volatile"]),global:l(["gl_DepthRange","gl_DepthRange.diff","gl_DepthRange.far","gl_DepthRange.near","gl_FragCoord","gl_FragDepth","gl_FrontFacing","gl_InstanceID","gl_PointCoord","gl_PointSize","gl_Position","gl_VertexID"]),function:l(["abs","acos","acosh","all","any","asin","asinh","atan","atanh","ceil","clamp","cos","cosh","cross","degrees","determinant","dFdx","dFdy","distance","dot","equal","exp","exp2","faceforward","floatBitsToInt","floatBitsToUint","floor","fract","fwidth","greaterThan","greaterThanEqual","intBitsToFloat","inverse","inversesqrt","isinf","isnan","length","lessThan","lessThanEqual","log","log2","matrixCompMult","max","min","mix","mod","modf","normalize","not","notEqual","outerProduct","packHalf2x16","packSnorm2x16","packUnorm2x16","pow","radians","reflect","refract","round","roundEven","sign","sin","sinh","smoothstep","sqrt","step","tan","tanh","texelFetch","texelFetchOffset","texture","textureGrad","textureGradOffset","textureLod","textureLodOffset","textureOffset","textureProj","textureProjGrad","textureProjGradOffset","textureProjLod","textureProjLodOffset","textureProjOffset","textureSize","transpose","trunc","uintBitsToFloat","unpackHalf2x16","unpackSnorm2x16","unpackUnorm2x16"])};function l(e){return{pattern:new RegExp(`(?:[^a-zA-Z0-9_])(${e.join("|")})(?=[^a-zA-Z0-9_])`),lookbehind:!1,greedy:!0}}var c=n(5072),d=n.n(c),u=n(7825),m=n.n(u),p=n(7659),g=n.n(p),h=n(5056),f=n.n(h),x=n(540),v=n.n(x),D=n(1113),w=n.n(D),b=n(1637),y={};y.styleTagTransform=w(),y.setAttributes=f(),y.insert=g().bind(null,"head"),y.domAPI=m(),y.insertStyleElement=v(),d()(b.A,y);const A=b.A&&b.A.locals?b.A.locals:void 0;function C(e){const a=r.useRef(0),[n,o]=r.useState(!1),l=r.useRef(null);return r.useEffect((()=>{window.setTimeout((()=>{const a=l.current;if(!a)return;const n=s().highlight(e.value,function(e){switch(e){case"ts":return s().languages.typescript;case"tsx":return s().languages.tsx;case"frag":case"vert":return s().languages.glsl;default:return i}}(e.language),e.language);a.innerHTML=n}),100)}),[e.value,e.language]),(0,t.jsxs)("div",{className:k(e),onDoubleClick:()=>{navigator.clipboard.writeText(e.value).then((()=>{o(!0),window.clearTimeout(a.current),a.current=window.setTimeout((()=>o(!1)),7e3)}))},children:[(0,t.jsx)("pre",{children:(0,t.jsx)("code",{ref:l,className:`language-${e.language}`})}),n&&(0,t.jsx)("div",{className:A.popup,onClick:()=>{o(!1),window.clearTimeout(a.current),a.current=0},children:(0,t.jsx)("div",{children:"This code has been copied to the clipboard!"})})]})}function k(e){const a=[A.CodeViewer];return"string"==typeof e.className&&a.push(e.className),a.join(" ")}}}]);