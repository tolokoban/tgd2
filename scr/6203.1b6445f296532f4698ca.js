"use strict";(self.webpackChunk_tolokoban_tgd=self.webpackChunk_tolokoban_tgd||[]).push([[6203],{6203:(e,n,t)=>{t.r(n),t.d(n,{default:()=>T});var r=t(4848),a=t(8453),s=t(6540),i=t(5968),o=t(2212),l=t(9280),d=t(6989),c=t(6252);function u(e,n){e.camera.transfo.distance=5;const t=new l.o57(e,{color:[0,0,0,1]}),r=new l.HTX(e).loadBitmap(n.image.texture),a=new l.g6h(e,{material:new l.$Hl({color:r})}),s=new l.Ipk(e,{depth:l.Eg5.less,children:[t,a]}),i=new l.K7(e,{children:[s],depthBuffer:!0,textureColor0:new l.HTX(e)}),o=new l.D$w(e,{filters:[new l.LiV({strength:10})],texture:i.textureColor0});e.add(i,o,new l.ZJl(((e,n)=>{a.transfo.orbitAroundX(n*Math.sin(e)),a.transfo.orbitAroundZ(1.341*n)}))),e.play()}function f(){return(0,r.jsx)(d.A,{onReady:u,assets:{image:{texture:c}}})}const h={"Detail #1":"    const fb = new TgdPainterFramebuffer(context, {\n        children: [meshPainter],\n        depthBuffer: true,\n        textureColor0: new TgdTexture2D(context),\n    })\n    const filters = new TgdPainterFilter(context, {\n        filters: [\n            new TgdFilterChromaticAberration({\n                strength: 10,\n            }),\n        ],\n        texture: fb.textureColor0,\n    })\n    context.add(\n        fb,\n        filters,\n        new TgdPainterLogic((time, delay) => {\n            mesh.transfo.orbitAroundX(delay * Math.sin(time))\n            mesh.transfo.orbitAroundZ(delay * 1.341)\n        })\n    )"},x='import {\n    TgdCameraPerspective,\n    TgdContext,\n    TgdFilterChromaticAberration,\n    TgdFilterVerbatim,\n    TgdFilterZoom,\n    TgdGeometryBox,\n    TgdMaterialDiffuse,\n    TgdMaterialNormals,\n    TgdPainterClear,\n    TgdPainterFilter,\n    TgdPainterFramebuffer,\n    TgdPainterLogic,\n    TgdPainterMesh,\n    TgdPainterState,\n    TgdTexture2D,\n    webglPresetDepth,\n} from "@tolokoban/tgd"\nimport View, { Assets } from "@/components/demo/Tgd"\n\nimport TextureURL from "@/assets/image/whale-1024.webp"\n\nfunction init(context: TgdContext, assets: Assets) {\n    context.camera.transfo.distance = 5\n    const clear = new TgdPainterClear(context, {\n        color: [0, 0, 0, 1],\n    })\n    const texture = new TgdTexture2D(context).loadBitmap(assets.image.texture)\n    const mesh = new TgdPainterMesh(context, {\n        material: new TgdMaterialDiffuse({\n            color: texture,\n        }),\n    })\n    const meshPainter = new TgdPainterState(context, {\n        depth: webglPresetDepth.less,\n        children: [clear, mesh],\n    })\n    const fb = new TgdPainterFramebuffer(context, {\n        children: [meshPainter],\n        depthBuffer: true,\n        textureColor0: new TgdTexture2D(context),\n    })\n    const filters = new TgdPainterFilter(context, {\n        filters: [\n            new TgdFilterChromaticAberration({\n                strength: 10,\n            }),\n        ],\n        texture: fb.textureColor0,\n    })\n    context.add(\n        fb,\n        filters,\n        new TgdPainterLogic((time, delay) => {\n            mesh.transfo.orbitAroundX(delay * Math.sin(time))\n            mesh.transfo.orbitAroundZ(delay * 1.341)\n        })\n    )\n    context.play()\n}\n\nexport default function Demo() {\n    return (\n        <View\n            onReady={init}\n            assets={{\n                image: {\n                    texture: TextureURL,\n                },\n            }}\n        />\n    )\n}\n';function m(){const[e,n]=s.useState(!1);return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)("div",{className:"half-left",children:(0,r.jsx)(f,{})}),(0,r.jsxs)("div",{className:"half-right",children:[(0,r.jsx)("div",{children:(0,r.jsx)(i.yQN,{variant:"elevated",onClick:()=>n(!e),children:e?"Show code details":"Show full code"})}),(0,r.jsx)(o.A,{language:"tsx",value:e?x:h})]})]})}function g(e){const n={a:"a",h1:"h1",hr:"hr",li:"li",p:"p",ul:"ul",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.h1,{children:[(0,r.jsx)(n.a,{href:"docs/classes/TgdPainterFramebuffer.html",children:"TgdPainterFramebuffer"})," - Step by step demo"]}),"\n",(0,r.jsx)(n.p,{children:"We now create a framebuffer and use its output texture as an input for the filter."}),"\n",(0,r.jsx)(n.p,{children:"But, as you can see, there is some issue here."}),"\n",(0,r.jsx)(m,{}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#/articles/painter/framebuffer/example0/03",children:"Previous step"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#/articles/painter/framebuffer/example0/05",children:"Next step"})}),"\n"]})]})}function T(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(g,{...e})}):g(e)}}}]);