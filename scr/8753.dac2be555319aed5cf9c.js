"use strict";(self.webpackChunk_tolokoban_tgd=self.webpackChunk_tolokoban_tgd||[]).push([[8753],{1278:(e,n,t)=>{e.exports=t.p+"bin/suzanne.d3b099acbd7623177bf6.glb"},7289:(e,n,t)=>{t.d(n,{A:()=>i});var s=t(4848),o=t(6540),a=t(8192),r=t(7402),c=t(3686);const l={Tgd:"hgIjhDQIuBCJEQ4ZgLXp",relative:"efOyHCihw9wfMB6AaAqw",overlay:"ywC8N0Uxbvm2Ug2DwPkE",loading:"PBWSRsbiwEqGpeL0hEfm",screen:"BErChOLWGtciKhh3IFud",canvas:"fT7FcYouYlPbElIAEXRP",gizmo:"uAPfWt_Dhe7RaRrnmIu0"};function i({className:e,options:n,onReady:t,gizmo:i=!1,width:u="640px",height:d="480px",noBorder:h=!1,assets:g,children:f}){const[x,w]=o.useState(!0),[m,b]=o.useState(!1),p=o.useRef(null),v=o.useRef(null),j=o.useRef(null),C=o.useRef(null),[R,y]=o.useState(!0);let S="auto";u.endsWith("px")&&d.endsWith("px")&&(u.substring(u.length-2),d.substring(d.length-2));const P=e=>{if(!e)return;if(v.current)return;v.current=e;const s=new a.tfp(e,n);p.current=s,y(!0),async function({glb:e,data:n,text:t,image:s}={}){console.log("ðŸš€ [Tgd] glb, data, text, image = ",e,n,t,s);const o={glb:{},data:{},text:{},image:{}},r=[];return s&&Object.keys(s).forEach((e=>{r.push((async()=>{const n=s[e];console.log("Loading image:",n);const t=await(0,a.V_9)(n);t&&(o.image[e]=t)}))})),e&&Object.keys(e).forEach((n=>{r.push((async()=>{const t=e[n];console.log("Loading GLB:",t);const s=await(0,a.TCe)(t);s&&(o.glb[n]=s)}))})),n&&Object.keys(n).forEach((e=>{r.push((async()=>{const t=n[e],s=await(0,a.vSU)(t);s&&(o.data[e]=s)}))})),t&&Object.keys(t).forEach((e=>{r.push((async()=>{const n=t[e],s=await(0,a.jWq)(n);s&&(o.text[e]=s)}))})),await Promise.all(r.map((e=>e()))),o}(g).then((e=>{console.log("Ready!"),t(s,e),s.paint(),y(!1)})).catch((e=>{console.error("Unable to initialize the scene!",e),y(!1)}));const o=j.current;o&&o.attachContext(s)},k=e=>{const n=new a.GbF({canvas:e});j.current=n,n.eventTipClick.addListener((({to:e})=>{const n=p.current;console.log("ðŸš€ [tgd] to, context =",e,n),n&&n.animSchedule({duration:.2,easingFunction:a.Wcc,action:(0,a.vRM)(n.camera,{orientation:e})})}));const t=p.current;t&&n.attachContext(t)};return o.useEffect((()=>{const e=v.current,n=p.current;if(!e||!n)return;const t=new ResizeObserver((()=>n.paint()));return t.observe(e),e.requestFullscreen||(e.requestFullscreen=e.webkitRequestFullscreen),b(Boolean(e.requestFullscreen)),()=>t.unobserve(e)}),[p.current,v.current]),h?(0,s.jsxs)("div",{ref:C,className:l.screen,style:{width:x?u:d,height:x?d:u},children:[(0,s.jsx)("canvas",{className:l.canvas,ref:P}),i&&(0,s.jsx)("canvas",{className:l.gizmo,ref:k})]}):(0,s.jsxs)("div",{className:r.Sxu.classNames.join(e,l.Tgd),children:[(0,s.jsxs)(r.sWC,{display:"flex",justifyContent:"space-between",children:[(0,s.jsx)(r.yQN,{variant:"elevated",onClick:()=>w(!x),enabled:!R,children:x?"Switch to Portrait":"Switch to Landscape"}),m&&(0,s.jsx)(r.yQN,{variant:"elevated",onClick:()=>{const e=C.current;e&&e.requestFullscreen()},enabled:!R,children:"Fullscreen"})]}),(0,s.jsxs)("div",{className:l.relative,children:[(0,s.jsxs)("div",{ref:C,className:l.screen,style:{width:x?u:d,height:x?d:u},children:[(0,s.jsx)("canvas",{className:l.canvas,ref:P}),i&&(0,s.jsx)("canvas",{className:l.gizmo,ref:k})]}),(0,s.jsx)("div",{className:r.Sxu.classNames.join(l.overlay,R&&l.loading),children:(0,s.jsx)(c.A,{})}),f]})]})}},8453:(e,n,t)=>{t.d(n,{R:()=>a});var s=t(6540);const o=s.createContext({});function a(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}},9212:(e,n,t)=>{t.r(n),t.d(n,{default:()=>w});var s=t(4848),o=t(8453),a=t(6540),r=t(7402),c=t(9074),l=t(8192),i=t(7289),u=t(1278);function d(){const[e,n]=a.useState(!0),[t,o]=a.useState(!0),[c,d]=a.useState(!0),h=a.useRef(null);return a.useEffect((()=>{const n=h.current;n&&n.setColor(e,t,c)}),[e,t,c]),(0,s.jsx)(i.A,{onReady:(e,n)=>{h.current=function(e,n){const t=new l.dRj(e,{asset:n.glb.suzanne}),s=new l.g6h(e);s.transfo.setScale(1.6);const o=new l.o57(e,{depth:1,color:[.3,.2,.1,1]}),a=new l.Ipk(e,{color:!0,children:[t]});return e.add(o,new l.Ipk(e,{depth:l.Eg5.lessOrEqual,children:[a,s]}),new l.ZJl((e=>{t.transfo.setEulerRotation(0,10*e,0),s.transfo.setPosition(2*Math.cos(e),0,0),s.transfo.setEulerRotation(17.945*e,0,0)}))),e.play(),{setColor(e,n,t){a.color.red=e,a.color.green=n,a.color.blue=t}}}(e,n)},assets:{glb:{suzanne:u}},children:(0,s.jsxs)(r.sWC,{display:"flex",gap:"L",justifyContent:"center",children:[(0,s.jsx)(r.myw,{value:e,onChange:n,children:"Red"}),(0,s.jsx)(r.myw,{value:t,onChange:o,children:"Green"}),(0,s.jsx)(r.myw,{value:c,onChange:d,children:"Blue"})]})})}const h={"Detail #1":"    const invisible = new TgdPainterMeshGltf(context, {\n        asset: assets.glb.suzanne,\n    })\n    const cube = new TgdPainterMesh(context)\n    cube.transfo.setScale(1.6)\n    const clear = new TgdPainterClear(context, {\n        depth: 1,\n        color: [0.3, 0.2, 0.1, 1],\n    })\n    const mask = new TgdPainterState(context, {\n        color: true,\n        children: [invisible],\n    })\n    context.add(\n        clear,\n        new TgdPainterState(context, {\n            depth: webglPresetDepth.lessOrEqual,\n            children: [mask, cube],\n        }),\n        new TgdPainterLogic(time => {\n            invisible.transfo.setEulerRotation(0, time * 10, 0)\n            cube.transfo.setPosition(2 * Math.cos(time), 0, 0)\n            cube.transfo.setEulerRotation(time * 17.945, 0, 0)\n        })\n    )\n    context.play()"},g='import {\n    TgdContext,\n    TgdPainterClear,\n    TgdPainterLogic,\n    TgdPainterMesh,\n    TgdPainterMeshGltf,\n    TgdPainterState,\n    webglPresetDepth,\n} from "@tolokoban/tgd"\nimport View, { Assets } from "@/components/demo/Tgd"\n\nimport SuzanneURL from "@/assets/mesh/suzanne.glb"\nimport React from "react"\nimport { ViewPanel, ViewSwitch } from "@tolokoban/ui"\n\ninterface Controller {\n    setColor(red: boolean, green: boolean, blue: boolean): void\n}\n\nfunction init(context: TgdContext, assets: Assets): Controller {\n    const invisible = new TgdPainterMeshGltf(context, {\n        asset: assets.glb.suzanne,\n    })\n    const cube = new TgdPainterMesh(context)\n    cube.transfo.setScale(1.6)\n    const clear = new TgdPainterClear(context, {\n        depth: 1,\n        color: [0.3, 0.2, 0.1, 1],\n    })\n    const mask = new TgdPainterState(context, {\n        color: true,\n        children: [invisible],\n    })\n    context.add(\n        clear,\n        new TgdPainterState(context, {\n            depth: webglPresetDepth.lessOrEqual,\n            children: [mask, cube],\n        }),\n        new TgdPainterLogic(time => {\n            invisible.transfo.setEulerRotation(0, time * 10, 0)\n            cube.transfo.setPosition(2 * Math.cos(time), 0, 0)\n            cube.transfo.setEulerRotation(time * 17.945, 0, 0)\n        })\n    )\n    context.play()\n    return {\n        setColor(red: boolean, green: boolean, blue: boolean) {\n            mask.color.red = red\n            mask.color.green = green\n            mask.color.blue = blue\n        },\n    }\n}\n\nexport default function Demo() {\n    const [R, setR] = React.useState(true)\n    const [G, setG] = React.useState(true)\n    const [B, setB] = React.useState(true)\n    const refController = React.useRef<Controller | null>(null)\n    const handleInit = (context: TgdContext, assets: Assets) => {\n        refController.current = init(context, assets)\n    }\n    React.useEffect(() => {\n        const ctrl = refController.current\n        if (!ctrl) return\n\n        ctrl.setColor(R, G, B)\n    }, [R, G, B])\n\n    return (\n        <View\n            onReady={handleInit}\n            assets={{\n                glb: {\n                    suzanne: SuzanneURL,\n                },\n            }}\n        >\n            <ViewPanel display="flex" gap="L" justifyContent="center">\n                <ViewSwitch value={R} onChange={setR}>\n                    Red\n                </ViewSwitch>\n                <ViewSwitch value={G} onChange={setG}>\n                    Green\n                </ViewSwitch>\n                <ViewSwitch value={B} onChange={setB}>\n                    Blue\n                </ViewSwitch>\n            </ViewPanel>\n        </View>\n    )\n}\n';function f(){const[e,n]=a.useState(!1);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)("div",{className:"half-left",children:(0,s.jsx)(d,{})}),(0,s.jsxs)("div",{className:"half-right",children:[(0,s.jsx)("div",{children:(0,s.jsx)(r.yQN,{variant:"elevated",onClick:()=>n(!e),children:e?"Show code details":"Show full code"})}),(0,s.jsx)(c.A,{language:"tsx",value:e?g:h})]})]})}function x(e){const n={a:"a",h1:"h1",p:"p",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{children:"Color Masking"}),"\n",(0,s.jsx)(f,{}),"\n",(0,s.jsx)(n.p,{children:"As you can see in this demo, we can mask out any color channel. When we render\nsuzanne, we can just fill the depth buffer, but change none of the pixels."}),"\n",(0,s.jsx)(n.p,{children:"As you will see in the next demo, this technique can be useful if you want to\nhave a rich (but fixed) environment in which you can move other meshes."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"#/tricks/color-mask/2",children:"Next demo"})})]})}function w(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(x,{...e})}):x(e)}}}]);