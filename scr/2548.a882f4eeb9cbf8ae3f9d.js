"use strict";(self.webpackChunk_tolokoban_tgd=self.webpackChunk_tolokoban_tgd||[]).push([[2548],{1881:(e,n,t)=>{t.r(n),t.d(n,{default:()=>x});var a=t(4848),s=t(8453),r=t(6540),o=t(7781),c=t(9074),i=t(5734),d=t(7289);function l(e){e.camera.transfo.distance=50,new i.TgdControllerCameraOrbit(e,{inertiaOrbit:1e3,maxDistance:50,minDistance:5,speedZoom:50});const n=new i.TgdPainterClear(e,{color:[.3,.3,.3,1],depth:1}),t=new i.TgdPainterSegmentsData,a=[];for(let e=-50;e<50;e++){const n=.5*e,t=10*Math.cos(e*Math.PI*.5/50),s=t*Math.cos(n),r=.2*e,o=t*Math.sin(n),c=Math.max(0,1-Math.abs(e)/50);a.push([s,r,o,c])}for(let e=1;e<a.length;e++){const n=[(e-.5)/(a.length+1),0],s=[(e+.5)/(a.length+1),0];t.add(a[e-1],a[e],n,s)}const s=new i.TgdTexture2D(e).loadBitmap((0,i.tgdCanvasCreatePalette)(["#f44","#ff4","#4f4","#4ff","#44f"])),r=new i.TgdPainterSegments(e,{makeDataset:t.makeDataset,roundness:6,minRadius:4,material:new i.TgdMaterialDiffuse({color:s})}),o=new i.TgdPainterState(e,{depth:i.webglPresetDepth.less,children:[r]});e.add(n,o),e.paint(),e.inputs.pointer.eventHover.addListener(n=>{const{x:t,y:a}=n.current,[s,r,o]=e.readPixel(t,a);console.log(`%c(${s}, ${r}, ${o})]`,`color:#777;background:rgb(${s},${r},${o})`)})}function h(){return(0,a.jsx)(d.A,{onReady:l,gizmo:!0,options:{preserveDrawingBuffer:!0}})}const u={"Detail #1":'    context.camera.transfo.distance = 50\n    new TgdControllerCameraOrbit(context, {\n        inertiaOrbit: 1000,\n        maxDistance: 50,\n        minDistance: 5,\n        speedZoom: 50,\n    })\n    const clear = new TgdPainterClear(context, {\n        color: [0.3, 0.3, 0.3, 1],\n        depth: 1,\n    })\n    const data = new TgdPainterSegmentsData()\n    const radius = 10\n    const nodes: ArrayNumber4[] = []\n    const width = 50\n    for (let step = -width; step < width; step++) {\n        const ang = step * 0.5\n        const r = radius * Math.cos((step * Math.PI * 0.5) / width)\n        const x = r * Math.cos(ang)\n        const y = step * 0.2\n        const z = r * Math.sin(ang)\n        const thickness = Math.max(0, 1.0 - Math.abs(step) / width)\n        nodes.push([x, y, z, thickness])\n    }\n    for (let i = 1; i < nodes.length; i++) {\n        const uv0: ArrayNumber2 = [(i - 0.5) / (nodes.length + 1), 0]\n        const uv1: ArrayNumber2 = [(i + 0.5) / (nodes.length + 1), 0]\n        data.add(nodes[i - 1], nodes[i], uv0, uv1)\n    }\n    const palette = new TgdTexture2D(context).loadBitmap(\n        tgdCanvasCreatePalette(["#f44", "#ff4", "#4f4", "#4ff", "#44f"])\n    )\n    const segments = new TgdPainterSegments(context, {\n        makeDataset: data.makeDataset,\n        roundness: 6,\n        minRadius: 4,\n        material: new TgdMaterialDiffuse({\n            color: palette,\n        }),\n    })\n    const state = new TgdPainterState(context, {\n        depth: webglPresetDepth.less,\n        children: [segments],\n    })\n    context.add(clear, state)\n    context.paint()'},g='import {\n    ArrayNumber2,\n    ArrayNumber4,\n    tgdCanvasCreatePalette,\n    TgdContext,\n    TgdControllerCameraOrbit,\n    TgdMaterialDiffuse,\n    TgdPainterClear,\n    TgdPainterSegments,\n    TgdPainterSegmentsData,\n    TgdPainterState,\n    TgdTexture2D,\n    webglPresetDepth,\n} from "@tolokoban/tgd"\nimport View from "@/components/demo/Tgd"\n\nfunction init(context: TgdContext) {\n    context.camera.transfo.distance = 50\n    new TgdControllerCameraOrbit(context, {\n        inertiaOrbit: 1000,\n        maxDistance: 50,\n        minDistance: 5,\n        speedZoom: 50,\n    })\n    const clear = new TgdPainterClear(context, {\n        color: [0.3, 0.3, 0.3, 1],\n        depth: 1,\n    })\n    const data = new TgdPainterSegmentsData()\n    const radius = 10\n    const nodes: ArrayNumber4[] = []\n    const width = 50\n    for (let step = -width; step < width; step++) {\n        const ang = step * 0.5\n        const r = radius * Math.cos((step * Math.PI * 0.5) / width)\n        const x = r * Math.cos(ang)\n        const y = step * 0.2\n        const z = r * Math.sin(ang)\n        const thickness = Math.max(0, 1.0 - Math.abs(step) / width)\n        nodes.push([x, y, z, thickness])\n    }\n    for (let i = 1; i < nodes.length; i++) {\n        const uv0: ArrayNumber2 = [(i - 0.5) / (nodes.length + 1), 0]\n        const uv1: ArrayNumber2 = [(i + 0.5) / (nodes.length + 1), 0]\n        data.add(nodes[i - 1], nodes[i], uv0, uv1)\n    }\n    const palette = new TgdTexture2D(context).loadBitmap(\n        tgdCanvasCreatePalette(["#f44", "#ff4", "#4f4", "#4ff", "#44f"])\n    )\n    const segments = new TgdPainterSegments(context, {\n        makeDataset: data.makeDataset,\n        roundness: 6,\n        minRadius: 4,\n        material: new TgdMaterialDiffuse({\n            color: palette,\n        }),\n    })\n    const state = new TgdPainterState(context, {\n        depth: webglPresetDepth.less,\n        children: [segments],\n    })\n    context.add(clear, state)\n    context.paint()\n    context.inputs.pointer.eventHover.addListener((event) => {\n        const { x, y } = event.current\n        const [R, G, B] = context.readPixel(x, y)\n        console.log(\n            `%c(${R}, ${G}, ${B})]`,\n            `color:#777;background:rgb(${R},${G},${B})`\n        )\n    })\n}\n\nexport default function Demo() {\n    return (\n        <View\n            onReady={init}\n            gizmo\n            options={{\n                preserveDrawingBuffer: true,\n            }}\n        />\n    )\n}\n';function m(){const[e,n]=r.useState(!1);return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)("div",{className:"half-left",children:(0,a.jsx)(h,{})}),(0,a.jsxs)("div",{className:"half-right",children:[(0,a.jsx)("div",{children:(0,a.jsx)(o.yQN,{variant:"elevated",onClick:()=>n(!e),children:e?"Show code details":"Show full code"})}),(0,a.jsx)(c.A,{language:"tsx",value:e?g:u})]})]})}function f(e){const n={a:"a",h1:"h1",h2:"h2",p:"p",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h1,{children:(0,a.jsx)(n.a,{href:"docs/classes/TgdPainterSegments.html",children:"TgdPainterSegments"})}),"\n",(0,a.jsx)(n.p,{children:"With the default way of drawing lines in WebGL, you can just have a thickness of\n1px on most hardwares. This painter allow you to paint with any thickness and\ncolor."}),"\n",(0,a.jsx)(n.h2,{children:"Simple segments"}),"\n",(0,a.jsx)(m,{}),"\n",(0,a.jsx)(n.h2,{children:"Showing a neuron"}),"\n",(0,a.jsxs)(n.p,{children:["Here is an ",(0,a.jsx)(n.a,{href:"#/articles/painter/segments/02",children:"example"})," of a neuron with several\nbranches."]})]})}function x(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(f,{...e})}):f(e)}},7289:(e,n,t)=>{t.d(n,{A:()=>d});var a=t(4848),s=t(6540),r=t(5734),o=t(7781),c=t(3686);const i={Tgd:"hgIjhDQIuBCJEQ4ZgLXp",relative:"efOyHCihw9wfMB6AaAqw",overlay:"ywC8N0Uxbvm2Ug2DwPkE",loading:"PBWSRsbiwEqGpeL0hEfm",screen:"BErChOLWGtciKhh3IFud",canvas:"fT7FcYouYlPbElIAEXRP",gizmo:"uAPfWt_Dhe7RaRrnmIu0",actions:"Ia9jfUO3OevcIh2fV6R6",enabled:"dZYZScZBbWV2Pm3ftXcG",error:"J6dIEMXVMCzdFWF9UHio"};function d({className:e,options:n,onReady:t,gizmo:d=!1,width:l="640px",height:h="480px",noBorder:u=!1,assets:g,children:m}){const[f,x]=s.useState(null),[p,w]=s.useState(!0),[v,b]=s.useState(!1),T=s.useRef(null),j=s.useRef(null),y=s.useRef(null),C=s.useRef(null),[P,D]=s.useState(!0);let k="auto";l.endsWith("px")&&h.endsWith("px")&&(l.substring(l.length-2),h.substring(h.length-2));const S=e=>{if(!e)return;if(j.current)return;j.current=e;const a=new r.TgdContext(e,n),s=a.gl.getParameter(a.gl.DEPTH_BITS);console.log("Depht buffer bits:",s),T.current=a,D(!0),async function({glb:e,data:n,text:t,image:a}={}){console.log("ðŸš€ [Tgd] glb, data, text, image = ",e,n,t,a);const s={glb:{},data:{},text:{},image:{}},o=[];return a&&Object.keys(a).forEach(e=>{o.push(async()=>{const n=a[e];console.log("Loading image:",n);const t=await(0,r.tgdLoadImage)(n);t&&(s.image[e]=t)})}),e&&Object.keys(e).forEach(n=>{o.push(async()=>{const t=e[n];console.log("Loading GLB:",t);const a=await(0,r.tgdLoadGlb)(t);a&&(s.glb[n]=a)})}),n&&Object.keys(n).forEach(e=>{o.push(async()=>{const t=n[e],a=await(0,r.tgdLoadArrayBuffer)(t);a&&(s.data[e]=a)})}),t&&Object.keys(t).forEach(e=>{o.push(async()=>{const n=t[e],a=await(0,r.tgdLoadText)(n);a&&(s.text[e]=a)})}),await Promise.all(o.map(e=>e())),s}(g).then(e=>{try{t(a,e),a.paint()}catch(e){x(e instanceof Error?e.message:JSON.stringify(e))}D(!1)}).catch(e=>{console.error("Unable to initialize the scene!",e),D(!1)});const o=y.current;o&&o.attachContext(a)},N=e=>{const n=new r.TgdCanvasGizmo({canvas:e});y.current=n,n.eventTipClick.addListener(({to:e})=>{const n=T.current;n&&n.animSchedule({duration:.2,easingFunction:r.tgdEasingFunctionInOutCubic,action:(0,r.tgdActionCreateCameraInterpolation)(n.camera,{orientation:e})})});const t=T.current;t&&n.attachContext(t)};return s.useEffect(()=>{const e=j.current,n=T.current;if(!e||!n)return;const t=new ResizeObserver(()=>n.paint());return t.observe(e),e.requestFullscreen||(e.requestFullscreen=e.webkitRequestFullscreen),b(Boolean(e.requestFullscreen)),()=>t.unobserve(e)},[T.current,j.current]),u?(0,a.jsxs)("div",{ref:C,className:i.screen,style:{width:p?l:h,height:p?h:l},children:[(0,a.jsx)("canvas",{className:i.canvas,ref:S}),d&&(0,a.jsx)("canvas",{className:i.gizmo,ref:N}),f&&(0,a.jsx)("div",{className:i.error,children:f})]}):(0,a.jsxs)("div",{className:o.Sxu.classNames.join(e,i.Tgd),children:[(0,a.jsxs)("div",{className:o.Sxu.classNames.join(i.actions,!P&&i.enabled),children:[(0,a.jsx)("div",{children:(0,a.jsx)(o.I64,{onClick:()=>w(!p)})}),(0,a.jsx)("div",{children:(0,a.jsx)(o.kRc,{onClick:()=>{const e=T.current;e&&e.takeSnapshot().then(e=>{const n=document.createElement("a");document.body.appendChild(n),n.style.display="none",n.href=e.src,n.download="snapshot.png",n.click(),window.setTimeout(()=>document.body.removeChild(n),3e4)})}})}),v&&(0,a.jsx)("div",{children:(0,a.jsx)(o.L9n,{onClick:()=>{const e=C.current;e&&e.requestFullscreen()}})})]}),(0,a.jsxs)("div",{className:i.relative,children:[(0,a.jsxs)("div",{ref:C,className:i.screen,style:{width:p?l:h,height:p?h:l},children:[(0,a.jsx)("canvas",{className:i.canvas,ref:S}),d&&(0,a.jsx)("canvas",{className:i.gizmo,ref:N}),f&&(0,a.jsx)("div",{className:i.error,children:f})]}),(0,a.jsx)("div",{className:o.Sxu.classNames.join(i.overlay,P&&i.loading),children:(0,a.jsx)(c.A,{})}),m]})]})}},8453:(e,n,t)=>{t.d(n,{R:()=>r});var a=t(6540);const s=a.createContext({});function r(e){const n=a.useContext(s);return a.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}}}]);