"use strict";(self.webpackChunk_tolokoban_tgd=self.webpackChunk_tolokoban_tgd||[]).push([[2415],{7289:(e,n,t)=>{t.d(n,{A:()=>l});var a=t(4848),s=t(6540),r=t(8192),i=t(7402),c=t(3686);const o={Tgd:"hgIjhDQIuBCJEQ4ZgLXp",relative:"efOyHCihw9wfMB6AaAqw",overlay:"ywC8N0Uxbvm2Ug2DwPkE",loading:"PBWSRsbiwEqGpeL0hEfm",screen:"BErChOLWGtciKhh3IFud",canvas:"fT7FcYouYlPbElIAEXRP",gizmo:"uAPfWt_Dhe7RaRrnmIu0"};function l({className:e,options:n,onReady:t,gizmo:l=!1,width:d="640px",height:u="480px",noBorder:x=!1,assets:p,children:h}){const[f,m]=s.useState(!0),[v,g]=s.useState(!1),E=s.useRef(null),T=s.useRef(null),R=s.useRef(null),w=s.useRef(null),[P,j]=s.useState(!0);let C="auto";d.endsWith("px")&&u.endsWith("px")&&(d.substring(d.length-2),u.substring(u.length-2));const b=e=>{if(!e)return;if(T.current)return;T.current=e;const a=new r.tfp(e,n);E.current=a,j(!0),async function({glb:e,data:n,text:t,image:a}={}){console.log("ðŸš€ [Tgd] glb, data, text, image = ",e,n,t,a);const s={glb:{},data:{},text:{},image:{}},i=[];return a&&Object.keys(a).forEach((e=>{i.push((async()=>{const n=a[e];console.log("Loading image:",n);const t=await(0,r.V_9)(n);t&&(s.image[e]=t)}))})),e&&Object.keys(e).forEach((n=>{i.push((async()=>{const t=e[n];console.log("Loading GLB:",t);const a=await(0,r.TCe)(t);a&&(s.glb[n]=a)}))})),n&&Object.keys(n).forEach((e=>{i.push((async()=>{const t=n[e],a=await(0,r.vSU)(t);a&&(s.data[e]=a)}))})),t&&Object.keys(t).forEach((e=>{i.push((async()=>{const n=t[e],a=await(0,r.jWq)(n);a&&(s.text[e]=a)}))})),await Promise.all(i.map((e=>e()))),s}(p).then((e=>{console.log("Ready!"),t(a,e),a.paint(),j(!1)})).catch((e=>{console.error("Unable to initialize the scene!",e),j(!1)}));const s=R.current;s&&s.attachContext(a)},y=e=>{const n=new r.GbF({canvas:e});R.current=n,n.eventTipClick.addListener((({to:e})=>{const n=E.current;console.log("ðŸš€ [tgd] to, context =",e,n),n&&n.animSchedule({duration:.2,easingFunction:r.Wcc,action:(0,r.vRM)(n.camera,{orientation:e})})}));const t=E.current;t&&n.attachContext(t)};return s.useEffect((()=>{const e=T.current,n=E.current;if(!e||!n)return;const t=new ResizeObserver((()=>n.paint()));return t.observe(e),e.requestFullscreen||(e.requestFullscreen=e.webkitRequestFullscreen),g(Boolean(e.requestFullscreen)),()=>t.unobserve(e)}),[E.current,T.current]),x?(0,a.jsxs)("div",{ref:w,className:o.screen,style:{width:f?d:u,height:f?u:d},children:[(0,a.jsx)("canvas",{className:o.canvas,ref:b}),l&&(0,a.jsx)("canvas",{className:o.gizmo,ref:y})]}):(0,a.jsxs)("div",{className:i.Sxu.classNames.join(e,o.Tgd),children:[(0,a.jsxs)(i.sWC,{display:"flex",justifyContent:"space-between",children:[(0,a.jsx)(i.yQN,{variant:"elevated",onClick:()=>m(!f),enabled:!P,children:f?"Switch to Portrait":"Switch to Landscape"}),v&&(0,a.jsx)(i.yQN,{variant:"elevated",onClick:()=>{const e=w.current;e&&e.requestFullscreen()},enabled:!P,children:"Fullscreen"})]}),(0,a.jsxs)("div",{className:o.relative,children:[(0,a.jsxs)("div",{ref:w,className:o.screen,style:{width:f?d:u,height:f?u:d},children:[(0,a.jsx)("canvas",{className:o.canvas,ref:b}),l&&(0,a.jsx)("canvas",{className:o.gizmo,ref:y})]}),(0,a.jsx)("div",{className:i.Sxu.classNames.join(o.overlay,P&&o.loading),children:(0,a.jsx)(c.A,{})}),h]})]})}},8453:(e,n,t)=>{t.d(n,{R:()=>r});var a=t(6540);const s=a.createContext({});function r(e){const n=a.useContext(s);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}},9026:(e,n,t)=>{t.r(n),t.d(n,{default:()=>m});var a=t(4848),s=t(8453),r=t(6540),i=t(7402),c=t(9074),o=t(8192),l=t(7289);class d extends o.tbm{constructor(e,n){super(),this.context=e,this.texture=n,this.prg=new o.a6X(e.gl,{vert:["#version 300 es","in vec2 attPoint;","out vec2 varUV;","void main() {",["varUV = attPoint + vec2(0.5);","gl_Position = vec4(attPoint, 0.0, 1.0);"],"}"],frag:["#version 300 es","precision mediump float;","uniform sampler2D uniTexture;","in vec2 varUV;","out vec4 FragColor;","void main() {",["FragColor = texture(uniTexture, varUV);"],"}"]});const t=new o.I9j({attPoint:"vec2"});t.set("attPoint",new Float32Array([-1,1,1,1,-1,-1,1,-1])),this.vao=new o.ZV_(e.gl,this.prg,[t])}delete(){this.vao.delete(),this.prg.delete()}paint(e,n){const{context:t,prg:a,vao:s,texture:r}=this,{gl:i}=t;a.use(),r.activate(0,a,"uniTexture"),s.bind(),i.drawArrays(i.TRIANGLE_STRIP,0,4),s.unbind()}}function u(){const e=r.useRef(null),n=n=>{const t=e.current;t&&t(n)},[t,s]=r.useState("REPEAT"),[c,u]=r.useState("REPEAT");return(0,a.jsx)(l.A,{onReady:n=>function(e,n){const{gl:t}=e,a=function(){const e=256,{canvas:n,ctx:t}=(0,o.bj4)(256,e);return t.fillStyle="#09f",t.fillRect(0,0,256,e),t.fillStyle="#f90",t.font="128px serif",t.textAlign="center",t.textBaseline="middle",t.fillText("TGD",128,128),n}(),s=new o.HTX(e,{flipY:!0}).loadBitmap(a);n.current=n=>{s.setParams(n),e.paint()};const r=new d(e,s);e.add(r),e.paint()}(n,e),children:(0,a.jsxs)(i.sWC,{display:"flex",justifyContent:"space-around",alignItems:"center",flexWrap:"wrap",children:[(0,a.jsxs)(i.si8,{label:"Wrap S",value:t,onChange:e=>{s(e),n({wrapS:e})},children:[(0,a.jsx)("div",{children:"REPEAT"},"REPEAT"),(0,a.jsx)("div",{children:"CLAMP_TO_EDGE"},"CLAMP_TO_EDGE"),(0,a.jsx)("div",{children:"MIRRORED_REPEAT"},"MIRRORED_REPEAT")]}),(0,a.jsxs)(i.si8,{label:"Wrap T",value:c,onChange:e=>{u(e),n({wrapT:e})},children:[(0,a.jsx)("div",{children:"REPEAT"},"REPEAT"),(0,a.jsx)("div",{children:"CLAMP_TO_EDGE"},"CLAMP_TO_EDGE"),(0,a.jsx)("div",{children:"MIRRORED_REPEAT"},"MIRRORED_REPEAT")]})]})})}const x={"Detail #1":"    const { gl } = context\n    const canvas = makeCanvas()\n    const texture = new TgdTexture2D(context, { flipY: true }).loadBitmap(\n        canvas\n    )\n    refUpdate.current = (params: WebglTextureParameters) => {\n        texture.setParams(params)\n        context.paint()\n    }\n    const painter = new Painter(context, texture)\n    context.add(painter)\n    context.paint()"},p='import {\n    TgdContext,\n    TgdTexture2D,\n    WebglTextureParameters,\n    tgdCanvasCreateWithContext2D,\n} from "@tolokoban/tgd"\nimport View from "@/components/demo/Tgd"\nimport { Painter } from "./painter"\nimport React from "react"\nimport { ViewButton, ViewOptions, ViewPanel } from "@tolokoban/ui"\n\nfunction init(\n    context: TgdContext,\n    refUpdate: { current: ((params: WebglTextureParameters) => void) | null }\n) {\n    const { gl } = context\n    const canvas = makeCanvas()\n    const texture = new TgdTexture2D(context, { flipY: true }).loadBitmap(\n        canvas\n    )\n    refUpdate.current = (params: WebglTextureParameters) => {\n        texture.setParams(params)\n        context.paint()\n    }\n    const painter = new Painter(context, texture)\n    context.add(painter)\n    context.paint()\n}\n\nexport default function Demo() {\n    const refUpdate = React.useRef<\n        ((params: WebglTextureParameters) => void) | null\n    >(null)\n    const update = (params: WebglTextureParameters) => {\n        const f = refUpdate.current\n        if (!f) return\n\n        f(params)\n    }\n    const [wrapS, setWrapS] =\n        React.useState<WebglTextureParameters["wrapS"]>("REPEAT")\n    const [wrapT, setWrapT] =\n        React.useState<WebglTextureParameters["wrapS"]>("REPEAT")\n    return (\n        <View onReady={(context: TgdContext) => init(context, refUpdate)}>\n            <ViewPanel\n                display="flex"\n                justifyContent="space-around"\n                alignItems="center"\n                flexWrap="wrap"\n            >\n                <ViewOptions\n                    label="Wrap S"\n                    value={wrapS}\n                    onChange={wrapS => {\n                        setWrapS(wrapS)\n                        update({ wrapS })\n                    }}\n                >\n                    <div key="REPEAT">REPEAT</div>\n                    <div key="CLAMP_TO_EDGE">CLAMP_TO_EDGE</div>\n                    <div key="MIRRORED_REPEAT">MIRRORED_REPEAT</div>\n                </ViewOptions>\n                <ViewOptions\n                    label="Wrap T"\n                    value={wrapT}\n                    onChange={wrapT => {\n                        setWrapT(wrapT)\n                        update({ wrapT })\n                    }}\n                >\n                    <div key="REPEAT">REPEAT</div>\n                    <div key="CLAMP_TO_EDGE">CLAMP_TO_EDGE</div>\n                    <div key="MIRRORED_REPEAT">MIRRORED_REPEAT</div>\n                </ViewOptions>\n            </ViewPanel>\n        </View>\n    )\n}\n\nfunction makeCanvas() {\n    const w = 256\n    const h = 256\n    const { canvas, ctx } = tgdCanvasCreateWithContext2D(w, h)\n    ctx.fillStyle = "#09f"\n    ctx.fillRect(0, 0, w, h)\n    ctx.fillStyle = "#f90"\n    ctx.font = `${h / 2}px serif`\n    ctx.textAlign = "center"\n    ctx.textBaseline = "middle"\n    ctx.fillText("TGD", w / 2, h / 2)\n    return canvas\n}\n';function h(){const[e,n]=r.useState(!1);return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)("div",{className:"half-left",children:(0,a.jsx)(u,{})}),(0,a.jsxs)("div",{className:"half-right",children:[(0,a.jsx)("div",{children:(0,a.jsx)(i.yQN,{variant:"elevated",onClick:()=>n(!e),children:e?"Show code details":"Show full code"})}),(0,a.jsx)(c.A,{language:"tsx",value:e?p:x})]})]})}function f(e){const n={code:"code",h1:"h1",p:"p",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h1,{children:"Texture2D from bitmap"}),"\n",(0,a.jsxs)(n.p,{children:["We call Bitmap, an image, a video, a canvas, ... All the following types,\nactually: ",(0,a.jsx)(n.code,{children:"ImageData"}),", ",(0,a.jsx)(n.code,{children:"HTMLImageElement"}),", ",(0,a.jsx)(n.code,{children:"HTMLCanvasElement"}),",\n",(0,a.jsx)(n.code,{children:"HTMLVideoElement"})," and ",(0,a.jsx)(n.code,{children:"ImageBitmap"}),"."]}),"\n",(0,a.jsx)(n.p,{children:"This is the easiest way to import data into a texture."}),"\n",(0,a.jsx)(h,{}),"\n",(0,a.jsx)(n.p,{children:"Youla!"})]})}function m(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(f,{...e})}):f(e)}}}]);