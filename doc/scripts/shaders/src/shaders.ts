import FS from "node:fs/promises"
import Path from "node:path"
import Chokidar from "chokidar"
import { color, logError } from "./utils/log"

async function processFile(path: string): Promise<void> {
    const name = Path.basename(path)
    const content = (await FS.readFile(path)).toString()
    await FS.writeFile(
        `${path}.ts`,
        `/**
 * WARNING! 
 * Do not edit this file!
 * It has been generated from this source:
 * 
 *   ${name}
 * 
 * ${new Date().toISOString()}
 */
const SHADER = ${JSON.stringify(content)}
export default SHADER
`
    )
}

async function start() {
    try {
        const arg = process.argv[2]
        if (!arg) throw Error("One argument is mandatory: the folder to watch!")

        Chokidar.watch(Path.resolve(arg)).on("all", (event, path) => {
            if (!["add", "change"].includes(event)) return

            if (path.endsWith(".vert") || path.endsWith(".frag")) {
                console.log(color(`[${event}]`, "BgLightGreen"), path)
                void processFile(path)
            }
        })
    } catch (ex) {
        logError(ex)
        process.exit(1)
    }
}

start()
