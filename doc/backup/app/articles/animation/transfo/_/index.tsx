/**
 * Warning! This code has been generated automatically.
 */
import React from "react"
import { ViewButton } from "@tolokoban/ui"
import CodeViewer from "@/components/demo/CodeViewer"
import Demo from "./transfo.demo"

const FOCUS = {"Detail #1":"    new TgdControllerCameraOrbit(ctx, { debug: true })\n    ctx.camera.transfo.distance = 10\n    const mesh = new TgdPainterMeshGltf(ctx, {\n        asset: assets.glb.mesh,\n    })\n    ctx.add(\n        new TgdPainterClear(ctx, { color: [0.4, 0.2, 0, 1] }),\n        new TgdPainterState(ctx, {\n            depth: webglPresetDepth.lessOrEqual,\n            children: [mesh],\n        })\n    )\n    ctx.paint()\n    ctx.animSchedule(\n        tgdAnimChainTransfoInterpolations(\n            ctx.camera.transfo,\n            [\n                {\n                    duration: 1,\n                    transfo: {\n                        distance: 2.9,\n                        position: [\n                            -0.39898496866226196, 0.22825193405151367, 0,\n                        ],\n                        orientation: [0, 0, 0, 1],\n                        scale: [1, 1, 1],\n                    },\n                },\n                {\n                    duration: 1,\n                    transfo: {\n                        distance: 5.1,\n                        position: [\n                            -0.9985308647155762, 0.7087523341178894,\n                            0.3115437924861908,\n                        ],\n                        orientation: [\n                            0.09696336090564728, -0.6652175784111023,\n                            -0.48327139019966125, 0.5608319044113159,\n                        ],\n                        scale: [1, 1, 1],\n                    },\n                },\n                {\n                    duration: 2,\n                    transfo: new TgdTransfo(ctx.camera.transfo),\n                    easingFunction: tgdEasingFunctionInOutQuint,\n                },\n            ],\n            { repeat: Infinity }\n        )\n    )"}
const FULL = "import {\n    tgdAnimChainTransfoInterpolations,\n    TgdContext,\n    TgdControllerCameraOrbit,\n    tgdEasingFunctionInOutQuint,\n    TgdPainterClear,\n    TgdPainterMeshGltf,\n    TgdPainterState,\n    TgdTransfo,\n    webglPresetDepth,\n} from \"@tolokoban/tgd\"\nimport View, { Assets } from \"@/components/demo/Tgd\"\n\nimport MeshURL from \"@/assets/mesh/suzanne.glb\"\n\nfunction init(ctx: TgdContext, assets: Assets) {\n    new TgdControllerCameraOrbit(ctx, { debug: true })\n    ctx.camera.transfo.distance = 10\n    const mesh = new TgdPainterMeshGltf(ctx, {\n        asset: assets.glb.mesh,\n    })\n    ctx.add(\n        new TgdPainterClear(ctx, { color: [0.4, 0.2, 0, 1] }),\n        new TgdPainterState(ctx, {\n            depth: webglPresetDepth.lessOrEqual,\n            children: [mesh],\n        })\n    )\n    ctx.paint()\n    ctx.animSchedule(\n        tgdAnimChainTransfoInterpolations(\n            ctx.camera.transfo,\n            [\n                {\n                    duration: 1,\n                    transfo: {\n                        distance: 2.9,\n                        position: [\n                            -0.39898496866226196, 0.22825193405151367, 0,\n                        ],\n                        orientation: [0, 0, 0, 1],\n                        scale: [1, 1, 1],\n                    },\n                },\n                {\n                    duration: 1,\n                    transfo: {\n                        distance: 5.1,\n                        position: [\n                            -0.9985308647155762, 0.7087523341178894,\n                            0.3115437924861908,\n                        ],\n                        orientation: [\n                            0.09696336090564728, -0.6652175784111023,\n                            -0.48327139019966125, 0.5608319044113159,\n                        ],\n                        scale: [1, 1, 1],\n                    },\n                },\n                {\n                    duration: 2,\n                    transfo: new TgdTransfo(ctx.camera.transfo),\n                    easingFunction: tgdEasingFunctionInOutQuint,\n                },\n            ],\n            { repeat: Infinity }\n        )\n    )\n}\n\nexport default function Demo() {\n    return (\n        <View\n            onReady={init}\n            assets={{\n                glb: { mesh: MeshURL },\n            }}\n        />\n    )\n}\n"

export default function DemoContainer() {
    const [full, setFull] = React.useState(false)
    return <>
        <div className="half-left"><Demo /></div>
        <div className="half-right">
            <div>
                <ViewButton variant="elevated" onClick={() => setFull(!full)}>
                    {full ? "Show code details" : "Show full code"}
                </ViewButton>
            </div>
            <CodeViewer language="tsx" value={full ? FULL : FOCUS} />
        </div>
    </>
}