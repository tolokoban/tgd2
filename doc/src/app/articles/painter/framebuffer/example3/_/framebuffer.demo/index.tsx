/**
 * Warning! This code has been generated automatically.
 */
import React from "react"
import { ViewButton } from "@tolokoban/ui"
import CodeViewer from "@/components/demo/CodeViewer"
import Demo from "./framebuffer.demo"

const FOCUS = {"Detail #1":"    context.camera = new TgdCameraPerspective({\n        transfo: { distance: 2 },\n        far: 100,\n        near: 0.01,\n        fovy: tgdCalcDegToRad(35),\n        zoom: 1,\n    })\n    new TgdControllerCameraOrbit(context, {\n        speedPanning: 0,\n        inertiaOrbit: 1000,\n        geo: {\n            lat: tgdCalcDegToRad(50),\n            minLat: tgdCalcDegToRad(-20),\n            maxLat: tgdCalcDegToRad(80),\n        },\n    })\n    const clear = new TgdPainterClear(context, {\n        color: new TgdVec4(0, 0, 0, 1),\n        depth: 1,\n        stencil: 0,\n    })\n    const mesh = new TgdPainterState(context, {\n        depth: webglPresetDepth.less,\n        cull: webglPresetCull.back,\n        children: [\n            new TgdPainterMeshGltf(context, {\n                asset: assets.glb.world,\n                material: ({ color }) => new MaterialDiffuse({ color }),\n            }),\n        ],\n    })\n    const meshOpaque = new TgdPainterState(context, {\n        depth: webglPresetDepth.less,\n        cull: webglPresetCull.back,\n        children: [\n            new TgdPainterMeshGltf(context, {\n                asset: assets.glb.world,\n                material: ({ color }) => new TgdMaterialDiffuse({ color }),\n            }),\n        ],\n    })\n    const sea = new PainterSea(context)\n    const scene = new TgdPainterGroup([clear, mesh])\n    const framebuffer = new TgdPainterFramebufferWithAntiAliasing(context, {\n        textureColor0: new TgdTexture2D(context),\n        children: [scene],\n    })\n    if (framebuffer.textureColor0) sea.texture = framebuffer.textureColor0\n    context.add(framebuffer, clear, meshOpaque, sea)\n    context.logicAdd((time) => {\n        sea.y = Math.sin(time * 0.4) * 0.5\n    })\n    context.play()"}
const FULL = "import {\n    tgdCalcDegToRad,\n    TgdCameraPerspective,\n    TgdContext,\n    TgdControllerCameraOrbit,\n    TgdMaterialDiffuse,\n    TgdPainterClear,\n    TgdPainterFramebufferWithAntiAliasing,\n    TgdPainterGroup,\n    TgdPainterMeshGltf,\n    TgdPainterState,\n    TgdTexture2D,\n    TgdVec4,\n    webglPresetCull,\n    webglPresetDepth,\n} from \"@tolokoban/tgd\"\nimport View, { Assets } from \"@/components/demo/Tgd\"\n\n// import WorldURL from \"./world.glb\"\nimport WorldURL from \"@/assets/mesh/chinese-chandelier.glb\"\nimport GridURL from \"@/assets/mesh/grid-10x10.glb\"\nimport { PainterSea } from \"./sea\"\nimport { MaterialDiffuse } from \"./diffuse\"\n\nfunction init(context: TgdContext, assets: Assets) {\n    context.camera = new TgdCameraPerspective({\n        transfo: { distance: 2 },\n        far: 100,\n        near: 0.01,\n        fovy: tgdCalcDegToRad(35),\n        zoom: 1,\n    })\n    new TgdControllerCameraOrbit(context, {\n        speedPanning: 0,\n        inertiaOrbit: 1000,\n        geo: {\n            lat: tgdCalcDegToRad(50),\n            minLat: tgdCalcDegToRad(-20),\n            maxLat: tgdCalcDegToRad(80),\n        },\n    })\n    const clear = new TgdPainterClear(context, {\n        color: new TgdVec4(0, 0, 0, 1),\n        depth: 1,\n        stencil: 0,\n    })\n    const mesh = new TgdPainterState(context, {\n        depth: webglPresetDepth.less,\n        cull: webglPresetCull.back,\n        children: [\n            new TgdPainterMeshGltf(context, {\n                asset: assets.glb.world,\n                material: ({ color }) => new MaterialDiffuse({ color }),\n            }),\n        ],\n    })\n    const meshOpaque = new TgdPainterState(context, {\n        depth: webglPresetDepth.less,\n        cull: webglPresetCull.back,\n        children: [\n            new TgdPainterMeshGltf(context, {\n                asset: assets.glb.world,\n                material: ({ color }) => new TgdMaterialDiffuse({ color }),\n            }),\n        ],\n    })\n    const sea = new PainterSea(context)\n    const scene = new TgdPainterGroup([clear, mesh])\n    const framebuffer = new TgdPainterFramebufferWithAntiAliasing(context, {\n        textureColor0: new TgdTexture2D(context),\n        children: [scene],\n    })\n    if (framebuffer.textureColor0) sea.texture = framebuffer.textureColor0\n    context.add(framebuffer, clear, meshOpaque, sea)\n    context.logicAdd((time) => {\n        sea.y = Math.sin(time * 0.4) * 0.5\n    })\n    context.play()\n}\n\nexport default function Demo() {\n    return (\n        <View\n            options={{ antialias: true, stencil: true, depth: true }}\n            onReady={init}\n            assets={{\n                glb: {\n                    world: WorldURL,\n                    see: GridURL,\n                },\n            }}\n        />\n    )\n}\n"

export default function DemoContainer() {
    const [full, setFull] = React.useState(false)
    return <>
        <div className="half-left"><Demo /></div>
        <div className="half-right">
            <div>
                <ViewButton variant="elevated" onClick={() => setFull(!full)}>
                    {full ? "Show code details" : "Show full code"}
                </ViewButton>
            </div>
            <CodeViewer language="tsx" value={full ? FULL : FOCUS} />
        </div>
    </>
}